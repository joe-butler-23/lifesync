import * as React from 'react';
import { ContentBlock, EditorState } from 'draft-js';
import { DeepnotesEditorState } from '../state_manager';
import 'draft-js/dist/Draft.css';
import './editor_styles.global.css';
declare global {
    interface Window {
        state: DeepnotesEditorState;
        scratch: any;
    }
}
interface Props {
    initialEditorState?: EditorState;
    initialZoomedInItemId: string;
    searchText?: string;
    onChange?: (editorState: EditorState) => void;
    onRootChange?: (zoomedInItemId: string) => void;
    editorWrapperStyle?: React.CSSProperties;
    onBookmarkClick?: () => void;
    withToolbar?: boolean;
}
export declare const DRAFT_DEFAULT_MAX_DEPTH = 4;
export declare const CUSTOM_DEPTH_CLASS = "public-DraftStyleDefault-depth-deepnotes-";
export declare const generateListNestingStyles: (selectorPrefix: string, maxDepth: number) => string;
/**
 * Dynamically generates the right list nesting styles.
 * Can be wrapped as a pure component - to re-render only when `max` changes (eg. never).
 */
export declare const ListNestingStyles: React.MemoExoticComponent<(props: {
    max: number;
}) => JSX.Element | null>;
/**
 * Add depth classes that Draft.js doesn't provide.
 * See https://github.com/facebook/draft-js/blob/232791a4e92d94a52c869f853f9869367bdabdac/src/component/contents/DraftEditorContents-core.react.js#L58-L62.
 * @param {ContentBlock} block
 */
export declare const blockDepthStyleFn: (block: ContentBlock) => string;
declare function DeepnotesEditor(props: Props): JSX.Element;
declare const _default: React.MemoExoticComponent<typeof DeepnotesEditor>;
export default _default;
