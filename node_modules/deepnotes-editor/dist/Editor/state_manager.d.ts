import { EditorState } from 'draft-js';
export declare const CHANGE = "CHANGE";
export declare const SET_ROOT_EDITOR_STATE = "SET_ROOT_EDITOR_STATE";
export declare const SET_EDITOR_STATE = "SET_EDITOR_STATE";
export declare const SET_STATE = "SET_STATE";
export declare const INSERT_SOFT_NEWLINE = "INSERT_SOFT_NEWLINE";
export declare const ZOOM = "ZOOM";
export declare const COLLAPSE_ITEM = "COLLAPSE_ITEM";
export declare const EXPAND_ITEM = "EXPAND_ITEM";
export declare const EXPAND_ALL = "EXPAND_ALL";
export declare const COLLAPSE_ALL = "COLLAPSE_ALL";
export declare const MOVE_UP = "MOVE_UP";
export declare const MOVE_DOWN = "MOVE_DOWN";
export declare const TOGGLE_COMPLETION = "TOGGLE_COMPLETION";
export declare const DELETE_CURRENT_ITEM = "DELETE_CURRENT_ITEM ";
export declare const INDENT = "INDENT";
export declare const DEDENT = "DEDENT";
export declare const BOOKMARK = "BOOKMARK";
export interface DeepnotesEditorState {
    rootEditorState: EditorState;
    editorState: EditorState;
    zoomedInItemId: string;
}
interface ChangeAction {
    type: typeof CHANGE;
    editorState: EditorState;
}
interface InsertSoftNewlineAction {
    type: typeof INSERT_SOFT_NEWLINE;
}
interface SetRootEditorStateAction {
    type: typeof SET_ROOT_EDITOR_STATE;
    editorState: EditorState;
}
interface SetEditorStateAction {
    type: typeof SET_EDITOR_STATE;
    editorState: EditorState;
}
interface SetStateAction {
    type: typeof SET_STATE;
    prop: string;
    val: any;
}
interface MoveUpAction {
    type: typeof MOVE_UP;
}
interface MoveDownAction {
    type: typeof MOVE_DOWN;
}
interface CollapseItemAction {
    type: typeof COLLAPSE_ITEM;
    blockKey: string;
}
interface ExpandItemAction {
    type: typeof EXPAND_ITEM;
    blockKey: string;
}
interface ExpandAllAction {
    type: typeof EXPAND_ALL;
}
interface CollapseAllAction {
    type: typeof COLLAPSE_ALL;
}
interface ZoomAction {
    type: typeof ZOOM;
    blockKey: string;
}
interface ToggleCompletionAction {
    type: typeof TOGGLE_COMPLETION;
}
interface DeleteCurrentItemAction {
    type: typeof DELETE_CURRENT_ITEM;
}
interface IndentItemAction {
    type: typeof INDENT;
}
interface DedentItemAction {
    type: typeof DEDENT;
}
interface BookmarkAction {
    type: typeof BOOKMARK;
}
export declare type EditorActions = BookmarkAction | IndentItemAction | DedentItemAction | ExpandAllAction | CollapseAllAction | DeleteCurrentItemAction | ToggleCompletionAction | ZoomAction | SetStateAction | ChangeAction | InsertSoftNewlineAction | SetRootEditorStateAction | SetEditorStateAction | MoveUpAction | MoveDownAction | CollapseItemAction | ExpandItemAction;
export declare function rootReducer(state: DeepnotesEditorState, action: EditorActions): DeepnotesEditorState;
export {};
