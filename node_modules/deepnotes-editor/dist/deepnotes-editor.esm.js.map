{"version":3,"file":"deepnotes-editor.esm.js","sources":["../src/Editor/components/EditorDispatchContext.ts","../src/debounce.ts","../src/icons/CheckMark.tsx","../src/icons/ArrowRight.tsx","../src/icons/ArrowLeft.tsx","../src/icons/DotHorizontal.tsx","../src/icons/Star.tsx","../src/Editor/components/Menu.tsx","../src/Editor/components/Hashtag.tsx","../src/Editor/components/SearchHighlight.tsx","../src/Editor/components/Link.tsx","../src/Editor/decorators.ts","../src/Editor/pluck_goodies.ts","../src/constants.ts","../src/Editor/pos_generators.ts","../src/Editor/block_creators.ts","../src/Editor/calculate_depth.ts","../src/Editor/tree_utils.ts","../src/Editor/add_empty_block_to_end.ts","../src/Editor/start_and_end_keys.ts","../src/Editor/make_corrections_to_node_and_its_descendants.ts","../src/Editor/recreate_parent_block_map.ts","../src/Editor/split_block.ts","../src/Editor/find_parent.ts","../src/icons/DownArrow.tsx","../src/Editor/components/Disc.tsx","../src/icons/PlusSign.tsx","../src/icons/MinusSign.tsx","../src/Editor/components/Item.tsx","../src/Editor/paste_text.ts","../src/Editor/move.ts","../src/Editor/collapse_expand_block.ts","../src/Editor/tab.ts","../src/Editor/state_manager.ts","../src/hooks/document-title.ts","../src/hooks/previous.ts","../src/Editor/has_collapsed_antecedent.ts","../src/Editor/sanitize_pos_and_depth_info.ts","../src/Editor/components/Editor.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport interface EditorDispatchContextProps {\n  onZoom: (key: string) => void;\n  onExpandClick: (key: string) => void;\n  onCollapseClick: (key: string) => void;\n}\n\n/**\n * We will only put the dispatch function in this context\n * The dispatch value from useReducer never changes after it's first created\n * Which means the components which access the dispatch functions from this context\n * will never uncessarily rerender on other state changes not related to them\n */\nexport const EditorContext = React.createContext<\n  Partial<EditorDispatchContextProps>\n>({});\n","export default function debounce(fn: Function, delay: number) {\n  let setTimeoutHandle: any;\n\n  return function(...args: Array<any>) {\n    // if the function is called again, cancel the timeout and start over again\n    clearTimeout(setTimeoutHandle);\n    setTimeoutHandle = setTimeout(() => {\n      fn.apply(null, args);\n    }, delay);\n  };\n}\n","import * as React from 'react';\n\nexport default function CheckMark(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M5 13l4 4L19 7\" />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function ArrowRight(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M17 8l4 4m0 0l-4 4m4-4H3\" />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function ArrowLeft(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M7 16l-4-4m0 0l4-4m-4 4h18\" />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function DotHorizontal(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function Star(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={1}\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      {...props}\n    >\n      <path d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Menu, MenuList, MenuButton, MenuItem } from '@reach/menu-button';\n\nimport CheckMark from '../../icons/CheckMark';\nimport ArrowRight from '../../icons/ArrowRight';\nimport ArrowLeft from '../../icons/ArrowLeft';\nimport DotHorizontal from '../../icons/DotHorizontal';\nimport Star from '../../icons/Star';\n\nimport styles from './menu_styles.module.css';\nimport buttonStyles from '../../button_styles.module.css';\nimport '@reach/menu-button/styles.css';\n\ninterface Props {\n  onExpandAllClick: () => void;\n  onCollapseAllClick: () => void;\n  onIndentClick: () => void;\n  onOutdentClick: () => void;\n  onToggleCompletionClick: () => void;\n  isBookmarked: boolean;\n  onBookmarkClick: () => void;\n}\n\nexport default function MenuContainer({\n  onExpandAllClick,\n  onCollapseAllClick,\n  onIndentClick,\n  onOutdentClick,\n  onToggleCompletionClick,\n  isBookmarked,\n  onBookmarkClick,\n}: Props) {\n  return (\n    <div className={styles['menu-container']}>\n      <div className={styles['menu-left-container']}>\n        <button\n          onMouseDown={e => {\n            // tip: mousedown event occurs before onFocus and onClick. If we\n            // stop the propagation event in mousedown, the onFocus and onClick\n            // events are not triggered. This means the editor item never loses\n            // focus. This helps prevent the on screen keyboard to not hide on\n            // mobile devices\n            e.stopPropagation();\n            e.preventDefault();\n            e.nativeEvent.stopImmediatePropagation();\n            onToggleCompletionClick();\n          }}\n          aria-label=\"Mark complete\"\n          className={classNames(\n            buttonStyles['icon-button'],\n            buttonStyles['button']\n          )}\n          title=\"Mark complete\"\n        >\n          <CheckMark className={styles['menu-icon']} />\n        </button>\n        {'\\u00A0'}\n        <button\n          onMouseDown={e => {\n            // tip: mousedown event occurs before onFocus and onClick. If we\n            // stop the propagation event in mousedown, the onFocus and onClick\n            // events are not triggered. This means the editor item never loses\n            // focus. This helps prevent the on screen keyboard to not hide on\n            // mobile devices\n            e.stopPropagation();\n            e.preventDefault();\n            e.nativeEvent.stopImmediatePropagation();\n            onOutdentClick();\n          }}\n          aria-label=\"Outdent\"\n          className={classNames(\n            buttonStyles['icon-button'],\n            buttonStyles['button']\n          )}\n          title=\"Outdent\"\n        >\n          <ArrowLeft className={styles['menu-icon']} />\n        </button>\n        <button\n          onMouseDown={e => {\n            e.stopPropagation();\n            e.preventDefault();\n            e.nativeEvent.stopImmediatePropagation();\n            onIndentClick();\n          }}\n          aria-label=\"Indent\"\n          className={classNames(\n            buttonStyles['icon-button'],\n            buttonStyles['button']\n          )}\n          title=\"Indent\"\n        >\n          <ArrowRight className={styles['menu-icon']} />\n        </button>\n      </div>\n      <div className={styles['menu-right-container']}>\n        <button\n          className={classNames(\n            buttonStyles['icon-button'],\n            buttonStyles['button']\n          )}\n          style={{ marginRight: '1rem' }}\n          onMouseDown={e => {\n            e.stopPropagation();\n            e.preventDefault();\n            e.nativeEvent.stopImmediatePropagation();\n            onBookmarkClick();\n          }}\n          aria-label=\"Bookmark item\"\n          title=\"Bookmark item\"\n          data-bookmarked={isBookmarked}\n        >\n          <Star\n            className={classNames(styles['menu-icon-large'], {\n              [styles.bookmarked]: isBookmarked,\n              [styles['not-bookmarked']]: !isBookmarked,\n            })}\n          />\n        </button>\n        <Menu>\n          {() => (\n            <>\n              <MenuButton>\n                <button\n                  className={classNames(\n                    buttonStyles['icon-button'],\n                    buttonStyles['button']\n                  )}\n                  aria-label=\"Show menu\"\n                >\n                  <DotHorizontal className={styles['menu-icon']} />\n                </button>\n              </MenuButton>\n              <MenuList className={styles['slide-down']}>\n                <MenuItem onSelect={onExpandAllClick}>Expand all</MenuItem>\n                <MenuItem onSelect={onCollapseAllClick}>Collapse all</MenuItem>\n              </MenuList>\n            </>\n          )}\n        </Menu>\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\n\ninterface Props {\n  children: Array<React.ReactElement>;\n  handleSearchInputChange?: (searchText: string) => void;\n}\n\nfunction Hashtag({ children, handleSearchInputChange }: Props) {\n  return (\n    <button\n      style={{\n        textDecoration: 'underline',\n        color: 'rgb(134, 140, 144)',\n        cursor: 'pointer',\n      }}\n      onClick={() => {\n        if (\n          children[0] &&\n          children[0].props &&\n          children[0].props.text &&\n          handleSearchInputChange\n        ) {\n          handleSearchInputChange(children[0].props.text);\n        }\n      }}\n      data-testid=\"hashtag\"\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default React.memo(Hashtag);\n","import * as React from 'react';\n\ninterface Props {\n  children: React.ReactNode | React.ReactNodeArray;\n}\n\nexport default function SearchHighlight(props: Props) {\n  return (\n    <span style={{ background: 'rgb(255,230,153)' }}>{props.children}</span>\n  );\n}\n","import * as React from 'react';\n\nimport styles from './link_styles.module.css';\n\ninterface Props {\n  children: Array<React.ReactElement>;\n}\n\nexport default function Link(props: Props) {\n  const link = React.Children.map(props.children, (child: React.ReactElement) =>\n    child && child.props ? child.props.text : ''\n  ).join('');\n\n  return (\n    <a\n      href={link}\n      onClick={() => window.open(link, '_blank')}\n      className={styles.link}\n    >\n      {props.children}\n    </a>\n  );\n}\n","import linkify from 'linkify-it';\nimport memoizeOne from 'memoize-one';\nimport { ContentBlock, CompositeDecorator } from 'draft-js';\nimport escapeStringRegexp from 'escape-string-regexp';\n\nimport Hashtag from './components/Hashtag';\nimport SearchHighlight from './components/SearchHighlight';\nimport Link from './components/Link';\n\nconst linkifyInstance = linkify();\nconst HASHTAG_REGEX = /#[\\w\\u0590-\\u05ff]+/g;\n\ntype Callback = (start: number, end: number) => void;\n\nfunction findWithRegex(\n  regex: RegExp,\n  contentBlock: ContentBlock,\n  callback: Callback\n) {\n  const text = contentBlock.getText();\n  let matchArr, start;\n  while ((matchArr = regex.exec(text)) !== null) {\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n\nfunction hashtagStrategy(contentBlock: ContentBlock, callback: Callback) {\n  findWithRegex(HASHTAG_REGEX, contentBlock, callback);\n}\n\nfunction findLinkEntities(\n  contentBlock: ContentBlock,\n  callback: (start: number, end: number) => void\n) {\n  const links = linkifyInstance.match(contentBlock.getText());\n  if (links) {\n    links.forEach((link: any) => callback(link.index, link.lastIndex));\n  }\n}\n\nexport const createDecorators = memoizeOne((searchText = '') => {\n  const regex = new RegExp(escapeStringRegexp(searchText), 'gi');\n\n  return new CompositeDecorator([\n    {\n      strategy: hashtagStrategy,\n      component: Hashtag,\n    },\n    {\n      strategy: (contentBlock, callback) => {\n        if (searchText) {\n          findWithRegex(regex, contentBlock, callback);\n        }\n      },\n      component: SearchHighlight,\n    },\n    { strategy: findLinkEntities, component: Link },\n  ]);\n});\n","import { EditorState } from 'draft-js';\n\nexport default function pluckGoodies(editorState: EditorState) {\n  const contentState = editorState.getCurrentContent();\n  const selectionState = editorState.getSelection();\n  const blockMap = contentState.getBlockMap();\n  const anchorKey = selectionState.getAnchorKey();\n  const anchorBlock = contentState.getBlockForKey(anchorKey);\n  const focusKey = selectionState.getFocusKey();\n  const focusBlock = contentState.getBlockForKey(focusKey);\n\n  return {\n    contentState,\n    selectionState,\n    blockMap,\n    anchorKey,\n    anchorBlock,\n    focusKey,\n    focusBlock,\n  };\n}\n","export const LOCAL_STORAGE_KEY = 'dumpster_content';\nexport const ROOT_KEY = 'root';\nexport const BASE_POS = 100000;\nexport const DB_NAME = 'deepnotes';\nexport const BLOCKS_TABLE_NAME = 'blocks';\nexport const DROPBOX_AUTOSAVE_PREF_KEY = 'DROPBOX_AUTOSAVE_PREF_KEY';\nexport const USER_PREF_SHOW_KEYBOARD_SHORTCUT_PANEL =\n  'USER_PREF_SHOW_KEYBOARD_SHORTCUT_PANEL';\nexport const USER_PREF_SHOW_SIDEBAR = 'USER_PREF_SHOW_SIDEBAR';\nexport const USER_PREF_THEME = 'USER_PREF_THEME';\nexport const MAX_DEPTH = 1000;\nexport const THEME_DARK = 'theme-dark';\nexport const THEME_LIGHT = 'theme-light';\n// i came to the 250 millisecond value by trial and error. The search\n// responsiveness still fill a little slow but if i reduce it further, there\n// will be to much rerender of the whole editor\nexport const SEARCH_DEBOUNCE = 250;\n","import { BASE_POS } from '../constants';\n\nexport function getPosNum(pos: number) {\n  return pos * BASE_POS;\n}\n\nexport function getPosInBetween(posStart: number, posEnd: number) {\n  return Math.round((posStart + posEnd) / 2);\n}\n\nexport function getPosAfter(lastPos: number) {\n  return lastPos + BASE_POS;\n}\n","import Immutable, { List } from 'immutable';\nimport {\n  CharacterMetadata,\n  ContentBlock,\n  EditorState,\n  ContentState,\n  genKey,\n  SelectionState,\n} from 'draft-js';\n\nimport { getPosNum } from './pos_generators';\nimport { createDecorators } from './decorators';\n\ninterface ContentBlockConfig {\n  key: string;\n  text: string;\n  depth: number;\n  characterList: List<CharacterMetadata>;\n}\n\nexport function getNewContentBlock(config: Partial<ContentBlockConfig>) {\n  return new ContentBlock({\n    key: genKey(),\n    type: 'unordered-list-item',\n    text: '',\n    depth: 0,\n    ...config,\n  });\n}\n\nexport function getEmptyBlock() {\n  return getNewContentBlock({ text: '' });\n}\n\nexport function getRootBlock(rootId: string) {\n  return getNewContentBlock({ text: '', key: rootId });\n}\n\nexport function getEmptySlateState(rootId: string) {\n  const firstItem = getEmptyBlock()\n    .set('depth', 1)\n    .set(\n      'data',\n      Immutable.Map({ parentId: rootId, pos: getPosNum(1) })\n    ) as ContentBlock;\n  const rootBlock = getRootBlock(rootId);\n  // we add 2 blocks in our empty slate because\n  // if we add only the root block, draftjs will then allow editing of the\n  // root block item.\n  // That problem goes away when i set the zoomedInItemId as 'root'. Hmm.\n  // But then there's no starting item to work with. Which is why we need\n  // the second empty block\n  const firstBlocks = [rootBlock, firstItem];\n\n  // // How to get started with a list item by default\n  // // Which is what workflowy does\n  // // Just call RichUtils.toggleBlockType with the empty state we create at\n  // // the beginning with 'unordered-list-item'\n  // RichUtils.toggleBlockType(EditorState.createEmpty(), \"unordered-list-item\")\n  // );\n  let emptySlate = EditorState.createWithContent(\n    ContentState.createFromBlockArray(firstBlocks),\n    createDecorators()\n  );\n  emptySlate = EditorState.forceSelection(\n    emptySlate,\n    SelectionState.createEmpty(firstItem.getKey())\n  );\n\n  return emptySlate;\n}\n","import { BlockMap } from 'draft-js';\n\nexport function calculateDepth(\n  blockMap: BlockMap,\n  blockKey: string,\n  zoomedInItemId?: string\n) {\n  let depth = -1;\n  const block = blockMap.get(blockKey);\n\n  if (!block) {\n    return depth;\n  }\n\n  let parentBlock = blockMap.get(block.getIn(['data', 'parentId']));\n\n  while (parentBlock) {\n    if (zoomedInItemId && parentBlock.getKey() === zoomedInItemId) {\n      break;\n    }\n\n    depth += 1;\n    parentBlock = blockMap.get(parentBlock.getIn(['data', 'parentId']));\n  }\n\n  return depth;\n}\n","import * as Immutable from 'immutable';\nimport { BlockMap, ContentBlock } from 'draft-js';\n\nimport { calculateDepth } from './calculate_depth';\n\n// Warning: This function is very expensive. Don't use it for regular, repetitive operations.\n// Only use for one time operations like at the start of load, or while saving etc.\n// We are using it currently to add hasChildren information to a block when we initialize\n// the editor\nexport function hasChildren(blockMap: BlockMap, blockKey: string): boolean {\n  return !!blockMap.find(\n    b => !!(b && b.getIn(['data', 'parentId']) === blockKey)\n  );\n}\n\nexport function adjustHasChildren(blockMap: BlockMap, blockKey: string) {\n  const block = blockMap.get(blockKey);\n\n  return blockMap.set(\n    blockKey,\n    block.setIn(\n      ['data', 'hasChildren'],\n      hasChildren(blockMap, blockKey)\n    ) as ContentBlock\n  ) as BlockMap;\n}\n\n// TODO: Is it a better idea to get all children, sortByPos, and then return the first block?\n// right now, we are relying on the fact that draft-js blocks are sorted by the order they appear in\nexport function getFirstChild(\n  blockMap: BlockMap,\n  blockKey: string\n): ContentBlock | undefined {\n  return blockMap.find(\n    b => !!(b && b.getIn(['data', 'parentId']) === blockKey)\n  );\n}\n\nexport function getChildren(blockMap: BlockMap, blockKey: string) {\n  return blockMap.filter(\n    b => !!(b && b.getIn(['data', 'parentId']) === blockKey)\n  );\n}\n\nexport function getNextSibling(blockMap: BlockMap, blockKey: string) {\n  const block = blockMap.get(blockKey);\n  const parentId = block.getIn(['data', 'parentId']);\n\n  return blockMap\n    .filter(b => !!(b && b.getIn(['data', 'parentId']) === parentId))\n    .find(\n      b => !!(b && b.getIn(['data', 'pos']) > block.getIn(['data', 'pos']))\n    );\n}\n\nexport function getPreviousSibling(blockMap: BlockMap, blockKey: string) {\n  const block = blockMap.get(blockKey);\n  const parentId = block.getIn(['data', 'parentId']);\n\n  return blockMap\n    .filter(b => !!(b && b.getIn(['data', 'parentId']) === parentId))\n    .reverse()\n    .find(\n      b => !!(b && b.getIn(['data', 'pos']) < block.getIn(['data', 'pos']))\n    );\n}\n\n/**\n * It returns block with all it's descendants, not just it's children\n * Everything inside tree with the block as the root node\n * @param blockMap\n * @param blockKey\n */\nexport function getBlocksWithItsDescendants(\n  blockMap: BlockMap,\n  blockKey: string\n): Immutable.Iterable<string, ContentBlock> {\n  const block = blockMap.get(blockKey);\n\n  return blockMap\n    .toSeq()\n    .skipUntil((_, k) => k === blockKey)\n    .takeWhile(\n      (b, k) =>\n        !!(\n          b &&\n          (k === blockKey ||\n            calculateDepth(blockMap, b.getKey()) >\n              calculateDepth(blockMap, block.getKey()))\n        )\n    );\n}\n","import { OrderedMap } from 'immutable';\nimport {\n  EditorState,\n  ContentState,\n  SelectionState,\n  ContentBlock,\n  BlockMap,\n} from 'draft-js';\n\nimport pluckGoodies from './pluck_goodies';\nimport { getNewContentBlock } from './block_creators';\nimport { getBlocksWithItsDescendants } from './tree_utils';\nimport { getPosNum, getPosAfter } from './pos_generators';\n\n// TODO: Should instead use recreateParentBlockMap\nfunction insertBlocksAtKey(\n  blockMap: BlockMap,\n  blocksToInsert: Immutable.Iterable<string, ContentBlock>,\n  insertionBlockKey: string,\n  insertBefore: boolean\n) {\n  const insertionBlock = blockMap.get(insertionBlockKey);\n  const blocksBeforeInsertionPoint = blockMap\n    .toSeq()\n    .takeUntil((_, k) => k === insertionBlockKey);\n  const blocksAfterInsertionPoint = blockMap\n    .toSeq()\n    .skipUntil((_, k) => k === insertionBlockKey)\n    .rest();\n\n  if (insertBefore) {\n    return blocksBeforeInsertionPoint\n      .concat(blocksToInsert)\n      .concat([[insertionBlockKey, insertionBlock]])\n      .concat(blocksAfterInsertionPoint)\n      .toOrderedMap();\n  } else {\n    return blocksBeforeInsertionPoint\n      .concat([[insertionBlockKey, insertionBlock]])\n      .concat(blocksToInsert)\n      .concat(blocksAfterInsertionPoint)\n      .toOrderedMap();\n  }\n}\n\nfunction insertBlocksAfter(\n  blockMap: BlockMap,\n  blocks: Immutable.Iterable<string, ContentBlock>,\n  insertionBlockKey: string\n) {\n  return insertBlocksAtKey(blockMap, blocks, insertionBlockKey, false);\n}\n\n/**\n * Will add a child to the given parentBlockKey after all of it's children.\n * If the parentBlockKey has no children, it will create a new child and add\n * that.\n */\nfunction appendChild(\n  blockMap: BlockMap,\n  parentBlockKey: string,\n  blockToAdd: ContentBlock\n) {\n  const blockWithItsChildren = getBlocksWithItsDescendants(\n    blockMap,\n    parentBlockKey\n  );\n\n  let blockToInsertAfterKey = parentBlockKey;\n  const parentId = parentBlockKey;\n  let pos = getPosNum(1);\n  // if the block has some children\n  if (blockWithItsChildren && blockWithItsChildren.count() > 1) {\n    blockToInsertAfterKey = blockWithItsChildren.last().getKey();\n    pos = getPosAfter(blockWithItsChildren.last().getIn(['data', 'pos']));\n  }\n\n  return insertBlocksAfter(\n    blockMap,\n    OrderedMap({\n      [blockToAdd.getKey()]: blockToAdd\n        .setIn(['data', 'parentId'], parentId)\n        .setIn(['data', 'pos'], pos) as ContentBlock,\n    }),\n    blockToInsertAfterKey\n  );\n}\n\n/**\n * Adds an empty block to the end of the list\n * If we are in a zoomed in state, we should add the block to the end of the\n * children list for the zoomedin item\n */\nexport function addEmptyBlockToEnd(\n  editorState: EditorState,\n  zoomedInItemId: string,\n  depth: number\n) {\n  const { contentState, blockMap } = pluckGoodies(editorState);\n  const newBlock = getNewContentBlock({ depth });\n  let newBlockMap;\n\n  // if we are at the root level, we can simply add the block to end of list\n  if (!zoomedInItemId) {\n    newBlockMap = blockMap.set(newBlock.getKey(), newBlock);\n  } else {\n    // otherwise we need to add the block to end of children list of the zoomed\n    // in item. There can be 2 cases here\n    // 1. The zoomed in item already has children\n    // 2. The zoomed in item does not have any children\n    // In this case, we can add the block after the zoomedin item and then call\n    // onTab, which will make that block the zoomed in items child\n    // OR - let's just write a appendChild method which takes care of both cases\n    // internally\n    newBlockMap = appendChild(blockMap, zoomedInItemId, newBlock);\n  }\n\n  const newSelection = SelectionState.createEmpty(newBlock.getKey());\n\n  const newContentState = contentState.merge({\n    blockMap: newBlockMap,\n    selectionBefore: newSelection,\n    selectionAfter: newSelection.merge({\n      anchorKey: newBlock.getKey(),\n      anchorOffset: 0,\n      focusKey: newBlock.getKey(),\n      focusOffset: 0,\n    }),\n  }) as ContentState;\n\n  // Always, always use this method to modify editorState when in doubt about\n  // how to edit the editor state. It maintains the undo/redo stack for the\n  // stack - https://draftjs.org/docs/api-reference-editor-state#push\n  return EditorState.forceSelection(\n    EditorState.push(editorState, newContentState, 'add-new-item' as any),\n    newSelection\n  );\n}\n","import { ContentState, SelectionState } from 'draft-js';\n\nimport { getBlocksWithItsDescendants } from './tree_utils';\n\n/**\n * This is not a generic start and end keys function\n * It's very specific in that it finds the first item which is either a sibling\n * of the start item or higher than that. I.e. it finds all the children of the\n * first item\n * TODO: Can't we reuse getBlocksWithItsChildren here?\n */\nexport function getStartAndEndKeys(\n  contentState: ContentState,\n  selectionState: SelectionState\n) {\n  const startBlockKey = selectionState.getAnchorKey();\n  const blockWithItsChildren = getBlocksWithItsDescendants(\n    contentState.getBlockMap(),\n    startBlockKey\n  );\n\n  return [\n    blockWithItsChildren.first().getKey(),\n    blockWithItsChildren.last().getKey(),\n  ];\n}\n","import { BlockMap, ContentBlock } from 'draft-js';\n\nfunction sortByPos(arr: Array<ContentBlock>) {\n  const newArr = [...arr];\n\n  newArr.sort((item1, item2) => {\n    // @ts-ignore\n    return item1.getIn(['data', 'pos']) - item2.getIn(['data', 'pos']);\n  });\n\n  return newArr;\n}\n\n/**\n * Given a blockMap and a block id, this function traverses the tree from the given block id and returns all blocks under that tree\n * It makes some changes to the children as it traverses them\n *  1. It sorts the children by pos\n *  2. It updates the depth information\n */\nexport function makeCorrectionsToNodeAndItsDescendants(\n  blockMap: BlockMap,\n  node: ContentBlock\n): Array<ContentBlock> {\n  const nodeDepth = node.getDepth();\n  const nodeKey = node.getKey();\n\n  const children = sortByPos(\n    blockMap\n      .filter(b => !!(b && b.getIn(['data', 'parentId']) === nodeKey))\n      .map((b?: ContentBlock) => {\n        return (b ? b.set('depth', nodeDepth + 1) : b) as ContentBlock;\n      })\n      .toArray()\n  );\n\n  // termination condition. The node is a leaf node.\n  if (!children) {\n    return [node];\n  }\n\n  return [node].concat(\n    children\n      .map((child: ContentBlock) =>\n        makeCorrectionsToNodeAndItsDescendants(blockMap, child)\n      )\n      .flat()\n  );\n}\n","import { ContentState, BlockMap, SelectionState } from 'draft-js';\n\nimport { getStartAndEndKeys } from './start_and_end_keys';\nimport { makeCorrectionsToNodeAndItsDescendants } from './make_corrections_to_node_and_its_descendants';\n\n/**\n * This function is super important for many edge cases of dedents\n * When an item in the middle of it's siblings is dedented, we can'j just\n * dedent that item and leave it there. It implies all it's siblings which\n * come after it will become it's children, which we don't want.\n * Just changing the parentId and pos of the dedented item means the data is\n * now correct, but the position of the block in our blockMap is not correct.\n * So we take the whole block of the dedented blocks new parent and regenrate\n * it based on the new parentId and pos data. That automatically puts the\n * dedented block in it's right place in the blockMap\n * TODO: This operation might be slow. Measure it's performance and tweak\n * it if required.\n * TODO: It does not work if the blocks are already not in correct position\n * E.g. I can't just set the parentId of some block to something new and\n * recreateParentBlockMap for that parentId and expect the block to be a child\n * of that new parent. Can we think of a way make sure that all items which\n * are supposed to be inside the given parentId are there?\n */\nexport function recreateParentBlockMap(\n  contentState: ContentState,\n  blockMap: BlockMap,\n  parentId: string\n): BlockMap {\n  const selectionState = SelectionState.createEmpty(parentId);\n  const [startKey, endKey] = getStartAndEndKeys(contentState, selectionState);\n  const startIndex = blockMap.keySeq().findIndex(k => k === startKey);\n  const endIndex = blockMap.keySeq().findIndex(k => k === endKey);\n\n  // the main thing nodeWithItsChildren does is sort the children inside a parent by it's pos. We rely on that to ensure that the sorting is correct after we set change the pos of some block\n  const recreatedContentState = ContentState.createFromBlockArray(\n    makeCorrectionsToNodeAndItsDescendants(blockMap, blockMap.get(parentId))\n  );\n  const recreatedBlocks = recreatedContentState.getBlockMap();\n\n  const recreatedBlockMap = blockMap\n    .slice(0, startIndex)\n    .concat(recreatedBlocks, blockMap.slice(endIndex + 1)) as BlockMap;\n\n  return recreatedBlockMap;\n}\n","import { EditorState, ContentState, ContentBlock } from 'draft-js';\n\nimport { getPosNum, getPosInBetween, getPosAfter } from './pos_generators';\nimport pluckGoodies from './pluck_goodies';\nimport { getChildren, hasChildren, getNextSibling } from './tree_utils';\nimport { getNewContentBlock } from './block_creators';\nimport { recreateParentBlockMap } from './recreate_parent_block_map';\n\n// TODO: add parentKey to the newly created blocks\n// TODO: add order to the newly created blocks\n// TODO: Write unit tests for this function\n// TODO: Adjust the hasChildren attribute of both the newly created block as well as their\n// parent blocks, in case the newly created block becomes a child of some block\nexport function splitBlock(editorState: EditorState, zoomedInItemId: string) {\n  const { contentState, selectionState, blockMap } = pluckGoodies(editorState);\n\n  // only allow split block when nothing is selected\n  if (!selectionState.isCollapsed()) {\n    return editorState;\n  }\n\n  const key = selectionState.getAnchorKey();\n  let blockToSplit = blockMap.get(key);\n  const text = blockToSplit.getText();\n  const isBlockCollapsed = blockToSplit.getIn(['data', 'collapsed']);\n  const isBlockToSplitZoomedIn = zoomedInItemId === blockToSplit.getKey();\n\n  let offset = selectionState.getAnchorOffset();\n  // if we calculate offset, pos and parentId, we are good to go.\n  // we can set the new text on the split block and create a\n  // new block with parentId and pos and recreateParentBlock\n  let pos, parentId;\n  const chars = blockToSplit.getCharacterList();\n\n  // if user presses enter when cursor is at the start of line of a zoomed in\n  // item, we want to create a new empty child item instead of pushing the whole\n  // line of zoomed in item to the child\n  if (isBlockToSplitZoomedIn && offset === 0) {\n    offset = blockToSplit.getText().length;\n  }\n\n  // if the block to split is the zoomed in item, we need to add the new item\n  // as a child, i.e. depth greater than the block being split\n  // We also want to do that for all kinds of parent items when they are not collapsed\n  // Every zoomed in item is a parent and we might want to remove that condition altogether\n  // but that will not work since a zoomed in item might be collapsed\n  if (\n    isBlockToSplitZoomedIn ||\n    (!isBlockCollapsed &&\n      hasChildren(blockMap, blockToSplit.getKey()) &&\n      // we don't want to create a new child if the split is with cursor at the beginning\n      // of the line. Then just create a new block above the current block\n      selectionState.getStartOffset() !== 0)\n  ) {\n    // the child can either be the first child EVER of the item\n\n    // or one of the chlidren. In the second case, we need to calculate the pos carefully\n    const zoomedInBlockChildren = getChildren(blockMap, blockToSplit.getKey());\n    if (zoomedInBlockChildren.count() > 0) {\n      pos = getPosInBetween(\n        0,\n        zoomedInBlockChildren.first().getIn(['data', 'pos'])\n      );\n    } else {\n      pos = getPosNum(1);\n    }\n    parentId = blockToSplit.getKey();\n  } else {\n    const nextSibling = getNextSibling(blockMap, blockToSplit.getKey());\n\n    if (nextSibling) {\n      pos = getPosInBetween(\n        blockToSplit.get('data').get('pos'),\n        nextSibling.get('data').get('pos')\n      );\n    } else {\n      pos = getPosAfter(blockToSplit.getIn(['data', 'pos']));\n    }\n\n    parentId = blockToSplit.getIn(['data', 'parentId']);\n    // if we are inserting a block above current block by keeping cursor at beginning of line and pressing enter\n    if (selectionState.getStartOffset() === 0) {\n      const tempPos = blockToSplit.getIn(['data', 'pos']);\n      blockToSplit = blockToSplit.setIn(['data', 'pos'], pos) as ContentBlock;\n      pos = tempPos;\n\n      offset = blockToSplit.getText().length;\n    }\n  }\n\n  let newBlockMap = blockMap.set(\n    blockToSplit.getKey(),\n    blockToSplit\n      .set('text', text.slice(0, offset))\n      .set('characterList', chars.slice(0, offset)) as ContentBlock\n  ) as ContentBlock;\n  const newBlock = getNewContentBlock({\n    text: text.slice(offset),\n  })\n    .set('depth', blockMap.get(parentId).getDepth() + 1)\n    .setIn(['data', 'parentId'], parentId)\n    .setIn(['data', 'pos'], pos) as ContentBlock;\n  newBlockMap = newBlockMap.set(newBlock.getKey(), newBlock) as ContentBlock;\n  newBlockMap = recreateParentBlockMap(\n    contentState.merge({\n      blockMap: newBlockMap,\n    }) as ContentState,\n    newBlockMap,\n    parentId\n  ) as ContentBlock;\n\n  const newContentState = contentState.merge({\n    blockMap: newBlockMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: newBlock.getKey(),\n      anchorOffset: 0,\n      focusKey: newBlock.getKey(),\n      focusOffset: 0,\n      isBackward: false,\n    }),\n  }) as ContentState;\n\n  // Always, always use this method to modify editorState when in doubt about\n  // how to edit the editor state. It maintains the undo/redo stack for the\n  // stack - https://draftjs.org/docs/api-reference-editor-state#push\n  return EditorState.push(editorState, newContentState, 'split-block');\n}\n","import { EditorState } from 'draft-js';\n\nimport pluckGoodies from './pluck_goodies';\nimport { calculateDepth } from './calculate_depth';\n\nexport function findParent(editorState: EditorState, blockKey: string) {\n  const { blockMap } = pluckGoodies(editorState);\n  const block = blockMap.get(blockKey);\n\n  const parentBlock = blockMap\n    .toSeq()\n    .takeUntil((_, k) => k === blockKey)\n    .reverse()\n    .skipWhile(\n      b =>\n        !!(\n          b &&\n          calculateDepth(blockMap, b.getKey()) >=\n            calculateDepth(blockMap, block.getKey())\n        )\n    )\n    .first();\n\n  return parentBlock;\n}\n","import * as React from 'react';\n\nexport default function DownArrow(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 21l-12-18h24z\" />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { EditorContext } from './EditorDispatchContext';\nimport DownArrow from '../../icons/DownArrow';\n\nimport styles from './disc_styles.module.css';\n\ninterface Props {\n  collapsed: boolean;\n  itemId: string;\n  isCollapsible: boolean;\n}\n\n/*\n * 18. Tip - If i don't add `contentEditable={false}` in the Disc outer div,\n * clicking the mouse on the disc puts the cursor there, as if the whole disc\n * is content editable. I think draft-js, by default, makes all html elements\n * inside it as contenteditable. So if we don't want something as editable\n * entities, we have to specifiy it explicitly.\n *\n * 19. Question? - Is it better to use Entities for this? Define an entity which is\n * IMMUTABLE and then tell that Disc is that type of entity?\n */\nexport default function Disc({ collapsed, itemId, isCollapsible }: Props) {\n  const { onZoom, onExpandClick, onCollapseClick } = React.useContext(\n    EditorContext\n  );\n\n  return (\n    <div className={styles['disc-container']} style={{ marginTop: 2 }}>\n      {isCollapsible && (\n        <button\n          className={styles['collapse-button']}\n          style={{\n            marginTop: -2,\n          }}\n          onClick={() => {\n            if (collapsed) {\n              if (typeof onExpandClick === 'function') {\n                onExpandClick(itemId);\n              }\n            } else {\n              if (typeof onCollapseClick === 'function') {\n                onCollapseClick(itemId);\n              }\n            }\n          }}\n          data-testid=\"collapse-arrow\"\n        >\n          <DownArrow\n            className={classNames(styles['down-arrow-icon'], {\n              [styles['collapsed-down-arrow-icon']]: collapsed,\n            })}\n            width={8}\n            height={8}\n          />\n        </button>\n      )}\n      <div\n        contentEditable={false}\n        className={classNames(styles['disc'], {\n          [styles['disc-collapsed']]: collapsed,\n        })}\n        onClick={() => {\n          if (typeof onZoom === 'function') {\n            onZoom(itemId);\n          }\n        }}\n        data-testid=\"outer-disc\"\n      >\n        <svg\n          width=\"6\"\n          height=\"6\"\n          className={styles['disc-icon']}\n          viewBox=\"0 0 6 6\"\n        >\n          <circle cx=\"3\" cy=\"3\" r=\"3\" />\n        </svg>\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\n\nexport default function PlusSign(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 512 512\"\n      enableBackground=\"new 0 0 512 512\"\n      xmlSpace=\"preserve\"\n      {...props}\n    >\n      <g>\n        <g>\n          <path\n            d=\"M492,236H276V20c0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20v216H20c-11.046,0-20,8.954-20,20s8.954,20,20,20h216\n\t\t\tv216c0,11.046,8.954,20,20,20s20-8.954,20-20V276h216c11.046,0,20-8.954,20-20C512,244.954,503.046,236,492,236z\"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function MinusSign(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 512 512\"\n      enableBackground=\"new 0 0 512 512\"\n      xmlSpace=\"preserve\"\n      {...props}\n    >\n      <g>\n        <rect y={236} width={512} height={40} />\n      </g>\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { ContentBlock, EditorBlock } from 'draft-js';\nimport Disc from './Disc';\nimport PlusSign from '../../icons/PlusSign';\nimport MinusSign from '../../icons/MinusSign';\n\nimport styles from './item_styles.module.css';\n\ninterface Props {\n  block: ContentBlock;\n  blockProps: {\n    zoomedInItemId: string;\n    baseDepth: number;\n    searchText?: string;\n    hidden: boolean;\n    onExpandClick: (blockKey: string) => void;\n    onCollapseClick: (blockKey: string) => void;\n  };\n}\n\n/**\n * Hacky but works\n * We wrap the item in nested divs each with class depth-manager mainly to get\n * the vertical line which connects the various item bullet dot together.\n * If we simply adding a margin-left of (depth * someMargin) on the item div\n * itself, we would not be able to show that vertical line by simply adding\n * a left-border and. The left border trick works only by creating the left\n * space in each depth-manager using a padding. It won't work with a margin-left\n */\nfunction wrapInNestedDivs(\n  el: React.ReactElement,\n  props: any,\n  depth: number\n): React.ReactElement {\n  if (depth <= 0) {\n    return el;\n  }\n\n  return React.createElement(\n    'div',\n    props,\n    wrapInNestedDivs(el, props, depth - 1)\n  );\n}\n\nfunction areEqual(prevProps: Props, newProps: Props) {\n  const {\n    block: prevBlock,\n    blockProps: {\n      hidden: prevHidden,\n      baseDepth: prevBaseDepth,\n      searchText: prevSearchText,\n    },\n  } = prevProps;\n  const {\n    block: nextBlock,\n    blockProps: {\n      hidden: nextHidden,\n      baseDepth: nextBaseDepth,\n      searchText: nextSearchText,\n    },\n  } = newProps;\n\n  return (\n    prevBlock === nextBlock &&\n    prevHidden === nextHidden &&\n    prevBaseDepth === nextBaseDepth &&\n    prevSearchText === nextSearchText\n  );\n}\n\nexport const Item = React.memo((props: Props) => {\n  const { block, blockProps } = props;\n  const {\n    onExpandClick,\n    onCollapseClick,\n    hidden,\n    baseDepth,\n    zoomedInItemId,\n  } = blockProps;\n\n  const collapsed = block.getIn(['data', 'collapsed']);\n  const completed = block.getIn(['data', 'completed']);\n  const collapsible = block.getIn(['data', 'hasChildren']);\n\n  /*\n   * 7. When i try rendering the block on my own by wrapping the list item\n   * EditorBlock inside my own html, it puts the whole div inside the rendered\n   * li! So i 1. wrote css to hide the bullet for the li(s). 2. Render a small\n   * circle like bullet of my own before the EditorBlock renders the text.\n   *\n   * Now i can control the various looks of the bullet based on\n   * 1. Whether they are collapsed or not\n   * 2. Whether user has marked it complete or not\n   * 3. And i can add the arrow before the bullet to allow users to collapse or\n   * expand a list item\n   */\n\n  if (hidden) {\n    return null;\n  }\n\n  const depth = block.getDepth();\n  // most of the conditional classes are for the zoomed in item. It's special.\n  const itemClasses = classNames(styles['item-base'], {\n    [styles.completed]: completed,\n    [styles['regular-item']]: zoomedInItemId !== block.getKey(),\n    [styles['zoomed-in-item']]: zoomedInItemId === block.getKey(),\n    [styles['small-text']]:\n      zoomedInItemId !== block.getKey() && depth > baseDepth + 1,\n  });\n\n  return wrapInNestedDivs(\n    <div\n      className={itemClasses}\n      style={{\n        marginLeft: -13,\n        // can't use tailwind classes for this since it has to increase linearly\n        // and tailwind values don't increase linearly\n        // we have to use this marginLeft if we don't use wrapInNestedDivs\n        // marginLeft: `${Math.max(0, 2 * (depth - baseDepth - 1))}rem`,\n      }}\n      data-testid=\"list-item\"\n    >\n      {block.getDepth() > baseDepth && (\n        <Disc\n          itemId={block.getKey()}\n          collapsed={!!collapsed}\n          isCollapsible={collapsible}\n        />\n      )}\n      {/* I had to add display: 'block' to get the edit cursor to work on empty list item. \n\t\tOtherwise, the edit cursor was not visible on empty item. It would come after typing one \n\t\tcharater */}\n      <div className={styles['item-container']}>\n        <EditorBlock {...props} />\n        {collapsible ? (\n          !collapsed ? (\n            <button\n              contentEditable={false}\n              className={styles['mobile-collapse-button']}\n              onMouseDown={e => {\n                e.stopPropagation();\n                e.nativeEvent.stopImmediatePropagation();\n                onCollapseClick(block.getKey());\n              }}\n              data-testid=\"collapse-button\"\n            >\n              <MinusSign width={16} height={16} />\n            </button>\n          ) : (\n            <button\n              contentEditable={false}\n              className={styles['mobile-collapse-button']}\n              onMouseDown={e => {\n                e.stopPropagation();\n                e.nativeEvent.stopImmediatePropagation();\n                onExpandClick(block.getKey());\n              }}\n              data-testid=\"expand-button\"\n            >\n              <PlusSign width={16} height={16} />\n            </button>\n          )\n        ) : null}\n      </div>\n    </div>,\n    {\n      className: classNames('depth-manager', styles['depth-manager']),\n    },\n    depth - baseDepth - 1\n  );\n}, areEqual);\n\nItem.displayName = 'Item';\n","import { EditorState, Modifier } from 'draft-js';\nimport pluckGoodies from './pluck_goodies';\n\nexport function pasteText(\n  editorState: EditorState,\n  pastedText: string\n): EditorState {\n  const { contentState, selectionState } = pluckGoodies(editorState);\n\n  return EditorState.push(\n    editorState,\n    Modifier.replaceText(contentState, selectionState, pastedText),\n    'paste-text' as any\n  );\n}\n","import {\n  EditorState,\n  ContentState,\n  ContentBlock,\n  SelectionState,\n} from 'draft-js';\n\nimport pluckGoodies from './pluck_goodies';\nimport { getPosNum, getPosAfter, getPosInBetween } from './pos_generators';\nimport { recreateParentBlockMap } from './recreate_parent_block_map';\nimport { calculateDepth } from './calculate_depth';\nimport {\n  getChildren,\n  getFirstChild,\n  getNextSibling,\n  getPreviousSibling,\n} from './tree_utils';\nimport { getBlocksWithItsDescendants } from './tree_utils';\n\nfunction moveBlock(\n  contentState: ContentState,\n  blockToSwapWith: ContentBlock,\n  blockToMoveKey: string,\n  newParentId: string,\n  newPos: number\n) {\n  const blockMap = contentState.getBlockMap();\n  let anchorBlock = blockMap.get(blockToMoveKey);\n  const parentId = anchorBlock.getIn(['data', 'parentId']);\n  anchorBlock = anchorBlock\n    .setIn(['data', 'parentId'], newParentId)\n    .setIn(['data', 'pos'], newPos) as ContentBlock;\n\n  let newBlockMap = blockMap\n    .set(blockToMoveKey, anchorBlock)\n    .set(blockToSwapWith.getKey(), blockToSwapWith);\n\n  // the order of operation for redoing the recreateParentBlockMap for\n  // parentId and newParentId is very important.\n  // because OrderedMap is also a map at the end of the day,\n  // so .concat works weirdly if we try to concatenate something which is\n  // already present in the map\n  // If we are moving something to new parent, wouldn't a single call to\n  // recreateParentBlockMap solve all our problems? i.e. wouldn't it\n  // automatically remove the block from it's previous position? No. Because the\n  // block will be with it's old parent in the map and when trying to\n  // concatenate a small part of the tree in a different node, the OrderedMap\n  // would probably keep only one version of the altered block. Probably the\n  // one which comes earlier. I don't know.\n  // If we are doing a move, updating the current parent tree should essentially\n  // delete the block from the whole blockMap\n  newBlockMap = recreateParentBlockMap(\n    contentState.set('blockMap', newBlockMap) as ContentState,\n    newBlockMap,\n    parentId\n  );\n  // all we have to do is again reattach the anchorBlock to newBlockMap before\n  // recreating the newParentId tree\n  if (newParentId !== parentId) {\n    newBlockMap = newBlockMap.merge(\n      getBlocksWithItsDescendants(blockMap, blockToMoveKey)\n    );\n    newBlockMap = newBlockMap.set(blockToMoveKey, anchorBlock);\n    newBlockMap = recreateParentBlockMap(\n      contentState.set('blockMap', newBlockMap) as ContentState,\n      newBlockMap,\n      newParentId\n    );\n  }\n\n  return newBlockMap;\n}\n\nfunction getBlockToInsertBefore(editorState: EditorState) {\n  const { blockMap, anchorKey } = pluckGoodies(editorState);\n  const block = blockMap.get(anchorKey);\n\n  const previousSibling = getPreviousSibling(blockMap, anchorKey);\n\n  // two cases\n  // 1. Either move the item before it's previous sibling\n  // 2. If there is no previous sibling, move it as the last child of the previous sibling of it's parent\n\n  if (previousSibling) {\n    return previousSibling;\n  }\n\n  const parent = blockMap.get(block.getIn(['data', 'parentId']));\n  const parentsPreviousSibling = getPreviousSibling(blockMap, parent.getKey());\n\n  if (!parentsPreviousSibling) {\n    return null;\n  }\n\n  const children = getChildren(blockMap, parentsPreviousSibling.getKey());\n\n  if (children.count() > 0) {\n    return children.last();\n  } else {\n    return parentsPreviousSibling;\n  }\n}\n\n// which block should we insert the current block after when moving down?\n// Can't just take the next one and say insert after that. Don't want to do\n// that if it's the child of the block to be moved\nfunction getBlockToInsertAfter(editorState: EditorState) {\n  const { blockMap, anchorKey } = pluckGoodies(editorState);\n  const block = blockMap.get(anchorKey);\n\n  const nextSibling = getNextSibling(blockMap, anchorKey);\n\n  // two cases\n  // 1. Either move the item after it's next sibling\n  // 2. If there is no next sibling, it's the last child. Move it as the first child of the next sibling of the parent\n  if (nextSibling) {\n    return nextSibling;\n  }\n\n  const parent = blockMap.get(block.getIn(['data', 'parentId']));\n  const parentNextSibling = getNextSibling(blockMap, parent.getKey());\n\n  if (!parentNextSibling) {\n    return null;\n  }\n\n  return parentNextSibling;\n}\n\nexport function moveCurrentBlockUp(\n  editorState: EditorState,\n  zoomedInItemId?: string\n) {\n  const { contentState, blockMap, selectionState, anchorKey } = pluckGoodies(\n    editorState\n  );\n\n  let blockToSwapWith = getBlockToInsertBefore(editorState);\n\n  if (!blockToSwapWith) {\n    console.log('moveCurrentBlockUp', 'nothing to swap with');\n    return editorState;\n  }\n\n  // we are trying to move a block above the currently zoomed in item, do\n  // nothing\n  if (\n    zoomedInItemId &&\n    (blockToSwapWith.getKey() === zoomedInItemId ||\n      (contentState.getBlockAfter(blockToSwapWith.getKey()) &&\n        contentState.getBlockAfter(blockToSwapWith.getKey()).getKey() ===\n          zoomedInItemId))\n  ) {\n    return editorState;\n  }\n  /*\n   * This will not work when we move multiple blocks or move blocks across\n   * depths. E.g. if i move a child item in depth 1 up, it should not replace\n   * it's parent but move beyond that and as a child of the earlier higher level\n   * item. Such things are much better done with a 'delete and insert' operation\n   *\n   * 1. Determine the key of block to be remove - anchorKey\n   * 2. Determine the index where it needs to be inserted\n   * 3. Delete the block from map using key\n   * 4. Convert blockMap to seq and insert the deleted block at (index - 1).\n   * Maybe using concat like we are doing below or some better way.\n   * If nothing else, let's fallback to our trusted `reduce` :)\n   *\n   * Will need a separate algorithm when we need to move multiple blocks\n   * because the block to be moved is collapsed.\n   *\n   */\n\n  const anchorBlock = blockMap.get(anchorKey);\n\n  // Instead of doing so many shenanigans, all we need to determine\n  // is the blocks new parentId and pos. There might be 2 cases with parentId\n  // 1. It remains the same\n  // 2. It changes\n  // In case 1. we call recreateParentBlockMap after changing the pos for\n  // affected blocks (swapped ones)\n  // In case 2. we change parentId of moved block and it's pos and then\n  // call recreateParentBlockMap for both the new and the old parentIds\n  const parentId = anchorBlock.getIn(['data', 'parentId']);\n  let newParentId;\n  let newPos;\n\n  if (blockToSwapWith.getIn(['data', 'parentId']) === parentId) {\n    newParentId = parentId;\n    newPos = blockToSwapWith.getIn(['data', 'pos']);\n    blockToSwapWith = blockToSwapWith.setIn(\n      ['data', 'pos'],\n      anchorBlock.getIn(['data', 'pos'])\n    ) as ContentBlock;\n  } else {\n    // we are moving below the child the preceding parent block\n    if (\n      calculateDepth(blockMap, blockToSwapWith.getKey()) ===\n      calculateDepth(blockMap, anchorBlock.getKey())\n    ) {\n      newParentId = blockToSwapWith.getIn(['data', 'parentId']);\n      newPos = getPosAfter(blockToSwapWith.getIn(['data', 'pos']));\n    } else {\n      // we are probably moving inside an item without any children\n      newParentId = blockToSwapWith.getKey();\n      newPos = getPosNum(1);\n    }\n  }\n\n  const newBlockMap = moveBlock(\n    contentState,\n    blockToSwapWith,\n    anchorKey,\n    newParentId,\n    newPos\n  );\n\n  const newContentState = contentState.merge({\n    blockMap: newBlockMap,\n  }) as ContentState;\n\n  const newSelection = new SelectionState({\n    anchorKey: anchorKey,\n    anchorOffset: selectionState.getAnchorOffset(),\n    focusKey: anchorKey,\n    focusOffset: selectionState.getFocusOffset(),\n  });\n\n  // Always, always use this method to modify editorState when in doubt about\n  // how to edit the editor state. It maintains the undo/redo stack for the\n  // stack - https://draftjs.org/docs/api-reference-editor-state#push\n  const newState = EditorState.push(\n    editorState,\n    newContentState,\n    'move-block' as any\n  );\n\n  return EditorState.forceSelection(newState, newSelection);\n}\n\nexport function moveCurrentBlockDown(\n  editorState: EditorState,\n  zoomedInItemId?: string\n) {\n  const { contentState, selectionState, blockMap, anchorKey } = pluckGoodies(\n    editorState\n  );\n\n  // TODO: write function to find the block to swap with when dealing with\n  // nested items\n  let blockToSwapWith = getBlockToInsertAfter(editorState);\n\n  if (!blockToSwapWith || blockToSwapWith.getKey() === anchorKey) {\n    console.log('moveCurrentBlockDown', 'nothing to swap with');\n    return editorState;\n  }\n\n  const anchorBlock = blockMap.get(anchorKey);\n\n  // Instead of doing so many shenanigans, all we need to determine\n  // is the blocks new parentId and pos. There might be 2 cases with parentId\n  // 1. It remains the same\n  // 2. It changes\n  // In case 1. we call recreateParentBlockMap after changing the pos for\n  // affected blocks (swapped ones)\n  // In case 2. we change parentId of moved block and it's pos and then\n  // call recreateParentBlockMap for both the new and the old parentIds\n  const parentId = anchorBlock.getIn(['data', 'parentId']);\n  let newParentId;\n  let newPos;\n\n  // We found a sibling to swap positions with\n  if (blockToSwapWith.getIn(['data', 'parentId']) === parentId) {\n    newParentId = parentId;\n    newPos = blockToSwapWith.getIn(['data', 'pos']);\n    blockToSwapWith = blockToSwapWith.setIn(\n      ['data', 'pos'],\n      anchorBlock.getIn(['data', 'pos'])\n    ) as ContentBlock;\n  } else {\n    // we might be trying to push the item to the zoomed in items next sibling\n    // which will make the block disappear from the zoomed in editor state\n    // let's not allow that\n    if (zoomedInItemId === anchorBlock.getIn(['data', 'parentId'])) {\n      return editorState;\n    }\n\n    // the blockToSwapWith has to be it's parent, if eligible\n    newParentId = blockToSwapWith.getKey();\n    const firstChild = getFirstChild(blockMap, blockToSwapWith.getKey());\n    // const newParentsChildren = getChildren(blockMap, blockToSwapWith.getKey());\n\n    // we are moving above the first child of the next parent block\n    // case 1 - If there are already some parents present\n    if (firstChild) {\n      newPos = getPosInBetween(0, firstChild.getIn(['data', 'pos']));\n    } else {\n      // case 2 - There are not existing children. This item will be the first child.\n      newPos = getPosNum(1);\n    }\n  }\n\n  const newBlockMap = moveBlock(\n    contentState,\n    blockToSwapWith,\n    anchorKey,\n    newParentId,\n    newPos\n  );\n\n  const newContentState = contentState.merge({\n    blockMap: newBlockMap,\n  }) as ContentState;\n  const newSelection = new SelectionState({\n    anchorKey: anchorKey,\n    anchorOffset: selectionState.getAnchorOffset(),\n    focusKey: anchorKey,\n    focusOffset: selectionState.getFocusOffset(),\n  });\n\n  // Always, always use this method to modify editorState when in doubt about\n  // how to edit the editor state. It maintains the undo/redo stack for the\n  // stack - https://draftjs.org/docs/api-reference-editor-state#push\n  const newState = EditorState.push(\n    editorState,\n    newContentState,\n    'move-block' as any\n  );\n\n  return EditorState.forceSelection(newState, newSelection);\n}\n","import {\n  ContentState,\n  ContentBlock,\n  EditorState,\n  SelectionState,\n} from 'draft-js';\n\nimport pluckGoodies from './pluck_goodies';\nimport { getBlocksWithItsDescendants } from './tree_utils';\n\nfunction toggleCollapseState(\n  editorState: EditorState,\n  collapseState: boolean,\n  blockKey: string\n) {\n  const { contentState, selectionState, blockMap } = pluckGoodies(editorState);\n  const block = blockMap.get(blockKey);\n\n  // if the block does not exists\n  // or if the collapsed state is already in the desired state, let it be\n  if (!block || block.getIn(['data', 'collapsed']) === collapseState) {\n    return editorState;\n  }\n\n  const blockWithItsChildren = getBlocksWithItsDescendants(blockMap, blockKey);\n  // if this list contains just one item, it's that block itself. There are\n  // no children to collapse\n  if (!blockWithItsChildren || blockWithItsChildren.count() === 1) {\n    return editorState;\n  }\n\n  const newContentState = contentState.merge({\n    blockMap: blockMap.set(\n      blockKey,\n      block.setIn(['data', 'collapsed'], collapseState) as ContentBlock\n    ),\n  }) as ContentState;\n\n  const newSelection = new SelectionState({\n    anchorKey: blockKey,\n    anchorOffset: selectionState.getAnchorOffset(),\n    // There is a bug where when i click expand/collapse arrow of any item, the\n    // draft-js code throws an exception. It seems to happen consistently when\n    // i click the first item arrow with mouse. Happens randomly for other\n    // items on and off.\n    // And looks like it doesn't happen again if i set the focusKey to\n    // undefined. Definitely not an ideal bug fix.\n    // TODO: figure out why this might happen. What is the focusKey exactly\n    // doing?\n    focusKey: undefined,\n    focusOffset: selectionState.getFocusOffset(),\n  });\n  const newState = EditorState.push(\n    editorState,\n    newContentState,\n    collapseState ? 'collapse-list' : ('expand-list' as any)\n  );\n\n  return EditorState.forceSelection(newState, newSelection);\n}\n\nexport function collapseBlock(\n  editorState: EditorState,\n  blockKey: string\n): EditorState {\n  const { anchorKey } = pluckGoodies(editorState);\n\n  return toggleCollapseState(editorState, true, blockKey || anchorKey);\n}\n\nexport function expandBlock(\n  editorState: EditorState,\n  blockKey: string\n): EditorState {\n  const { anchorKey } = pluckGoodies(editorState);\n\n  return toggleCollapseState(editorState, false, blockKey || anchorKey);\n}\n\n/*\n * bug - if the cursor is at end of line of the list item, expand does\n * not work. If the cursor is anywhere else on the line, it works\n * Root cause - selectionState.getAnchorKey, getStartKey, getFocusKey - all\n * return the wrong information when the cursor is at the end of line. They\n * return the last child of the collapsed item as the anchor block\n * Once we collapse the item, the selection state goes wrong. It sets itself\n * to the last child of the collapsed item. Probably because draftjs also\n * handles command+up or command+down? don't know.\n *\n * bug - Once expanded, creating new item with 'Enter' key creates the\n * new item as a child of the current item. Because the selectionState is\n * pointing to the last child of this item. Just hiding the block with\n * display: none is not a viable solution. Also because we are not controlling\n * the wrapper li for each list item. That's controlled by draft-js. We\n * are just hiding the content inside that li. We might need to completely\n * remove those blocks from contentState when collapsing items. And maintain\n * a master contentState somewhere. But that would create problems of\n * syncing that master contentState with changed contentState while editing\n * a current one which has one or more collapsed items. Hmm...\n */\n","import {\n  SelectionState,\n  ContentState,\n  EditorState,\n  BlockMap,\n  ContentBlock,\n} from 'draft-js';\n\nimport { ROOT_KEY } from '../constants';\n\nimport { getPosNum, getPosAfter, getPosInBetween } from './pos_generators';\nimport { recreateParentBlockMap } from './recreate_parent_block_map';\nimport { calculateDepth } from './calculate_depth';\nimport { adjustHasChildren } from './tree_utils';\n\nfunction getParentIdAfterAdjustment(\n  contentState: ContentState,\n  indentBlockKey: string,\n  newDepth: number\n): string {\n  let previousBlock = contentState.getBlockBefore(indentBlockKey);\n  const blockMap = contentState.getBlockMap();\n\n  // TODO: Add description about what we are doing in this while loop\n  while (previousBlock) {\n    if (calculateDepth(blockMap, previousBlock.getKey()) < newDepth) {\n      return previousBlock.getKey();\n    }\n\n    previousBlock = contentState.getBlockBefore(previousBlock.getKey());\n  }\n\n  return ROOT_KEY;\n}\n\n/**\n * Once we find the parentId after indent or dedent, we don't need the exact\n * operation which was performed. We can use the parentId to get all the current\n * nodes with same parentId, the adjusted blocks position in those children\n * and hence the adjusted blocks new postion\n */\nfunction getPosAfterAdjustment(\n  blockMap: BlockMap,\n  adjustedBlockKey: string,\n  newParentId: string\n): number {\n  // we get the blockMap with adjusted parentId. This will help us get the\n  // position of the adjusted block in the children list\n  const blocksWithSameParent = blockMap\n    .filter(b => !!(b && b.get('data').get('parentId') === newParentId))\n    .toArray();\n\n  let i = 0;\n  let blockBefore;\n  let blockAfter;\n\n  while (i < blocksWithSameParent.length) {\n    // once we find the adjustment block, we know the surrounding 2 are\n    // actually it's blockBefore and blockAfter at the same depth\n    if (blocksWithSameParent[i].getKey() === adjustedBlockKey) {\n      blockBefore = blocksWithSameParent[i - 1];\n      blockAfter = blocksWithSameParent[i + 1];\n      break;\n    }\n\n    i += 1;\n  }\n\n  if (blockBefore && blockAfter) {\n    return getPosInBetween(\n      blockBefore.get('data').get('pos'),\n      blockAfter.get('data').get('pos')\n    );\n  } else if (blockBefore) {\n    return getPosAfter(blockBefore.get('data').get('pos'));\n  } else if (blockAfter) {\n    return getPosNum(1);\n  } else {\n    return getPosNum(1);\n  }\n}\n\n// adjust block depth by +1 or -1 for the current item as well as all it's\n// children and the children of children recursively. We don't need to do it\n// recursively in this case because draftjs blockMap is ordered and we know\n// that we have handled all the descendents of the current item when we reach\n// another item which is at same depth as current item\nfunction adjustBlockDepthForContentState(\n  contentState: ContentState,\n  selectionState: SelectionState,\n  adjustment: number\n): ContentState {\n  // TODO: can we not use getBlocksWithItsChildren here? Probably not since we\n  // need any grandchildren and their children and theirs\n  const indentBlockKey = selectionState.getAnchorKey();\n\n  let blockMap = contentState.getBlockMap();\n  let indentBlock = blockMap.get(indentBlockKey);\n  const newDepth = calculateDepth(blockMap, indentBlockKey) + adjustment;\n  const oldParentId = indentBlock.getIn(['data', 'parentId']);\n\n  // TODO: When we dedent an item which is in between it's other siblings,\n  // we need to create the list of items from this dedented item's parent and\n  // downwards again and completely replace that list in the current blockMap.\n  // It will lead to things like an a middle sibling being dedented changing it's\n  // position in the list after the end of it's siblings but one level up.\n  // Check workflowy behavior.\n  // The only way to do it seems to be rearranging everything inside the parent\n  // of this dedented item.\n  // we can use arrToObj and loadFromDb functions to rearrange the affected\n  // blocks. Using getStartAndEndKeys we can get the blocks array from our\n  // blockMap and then use arrToObj to create an object map of the blocks and\n  // pass it to loadFromDb to get a block array again.\n  // To update the blocks inside BlockMap, which is an OrderedMap, we have to\n  // use the same trick that we use in splitBlock. Create a aboveBlocks,\n  // betweenBlocks and afterBlocks arrays and merge them to make the final\n  // blockMap again.\n  // something like\n  // blockMap.slice(0, indentBlockKey)\n  //    .concat(Immutable.OrderedMap(\n  //       // from [{ key: 'a' }, { key: 'b' } ] to\n  //       // [ ['a', { key: 'a' }], ['b', { key: 'b' }]]\n  //       // so that Immutable.OrderedMap can consume it correctly\n  //       convertToKeyValuePairs(\n  //         loadFromDb(new DB(blockMap.slice(indentBlockKey, endKey).toJS()))\n  //       )\n  //     )\n  //    .concat(blockMap.slice(endKey))\n  // Let's call that function recreateParentBlockMap()\n  const parentId = getParentIdAfterAdjustment(\n    contentState,\n    indentBlockKey,\n    newDepth\n  );\n\n  indentBlock = indentBlock.setIn(\n    ['data', 'parentId'],\n    parentId\n  ) as ContentBlock;\n  // we need to update blockMap before we send it to getPosAfterAdjustment\n  blockMap = blockMap.set(indentBlock.getKey(), indentBlock);\n  indentBlock = indentBlock.setIn(\n    ['data', 'pos'],\n    getPosAfterAdjustment(blockMap, indentBlock.getKey(), parentId)\n  ) as ContentBlock;\n\n  // set new parent id\n  blockMap = blockMap.set(indentBlockKey, indentBlock);\n  blockMap = recreateParentBlockMap(\n    contentState.set('blockMap', blockMap) as ContentState,\n    blockMap,\n    parentId\n  ) as BlockMap;\n\n  // if the parent block is collapsed, expand it\n  // otherwise we won't be able to see where the indented block went\n  if (adjustment === 1) {\n    const parentBlock = blockMap.get(parentId);\n    if (parentBlock.getIn(['data', 'collapsed'])) {\n      blockMap = blockMap.set(\n        parentId,\n        parentBlock.setIn(['data', 'collapsed'], false) as ContentBlock\n      ) as BlockMap;\n    }\n  }\n\n  // We want to adjust the hasChildren property of both the old parent block as well\n  // as the new parent block for the indented/dedented block\n  blockMap = adjustHasChildren(\n    adjustHasChildren(blockMap, oldParentId),\n    parentId\n  );\n\n  return contentState.merge({\n    blockMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState,\n  }) as ContentState;\n}\n\n/*\n * Overriding the draft-js provided onTab function since it doesn't work on\n * multiple list items, i.e. an hierarchy of items. If i press tab on an item\n * which has children, it should move into the previous sibling along with all\n * it's children.\n * TODO: update parentKeys as appropriate\n */\nexport function onTab(\n  editorState: EditorState,\n  maxDepth: number,\n  zoomedInItemId?: string,\n  shiftKey = false\n) {\n  const selection = editorState.getSelection();\n  // TODO: Why are we using startBlockKey here? Why not anchorKey\n  const startBlockKey = selection.getStartKey();\n  const content = editorState.getCurrentContent();\n  const blockMap = content.getBlockMap();\n  const startBlock = content.getBlockForKey(startBlockKey);\n  const previousBlock = content.getBlockBefore(startBlockKey);\n  const baseDepth = zoomedInItemId\n    ? calculateDepth(blockMap, zoomedInItemId) + 1\n    : 0;\n\n  if (\n    // if the first block in selection is the first block overall, don't do\n    // anything. Either for tab or for shift-tab\n    !previousBlock ||\n    // if we are trying to change depth of the zoomed in item itself\n    calculateDepth(blockMap, startBlock.getKey()) < baseDepth ||\n    // if we are trying to dedent the direct children of the zoomed in item\n    (shiftKey && calculateDepth(blockMap, startBlock.getKey()) === baseDepth)\n  ) {\n    console.log('This seems like the first list item. Nothing to do.');\n    return editorState;\n  }\n\n  const depth = calculateDepth(blockMap, startBlock.getKey());\n\n  if (depth >= maxDepth) {\n    return editorState;\n  }\n\n  // we don't want a difference of more than one level between an item and\n  // it's previous block\n  if (\n    !shiftKey &&\n    calculateDepth(blockMap, startBlock.getKey()) -\n      calculateDepth(blockMap, previousBlock.getKey()) >=\n      1\n  ) {\n    return editorState;\n  }\n\n  const withAdjustment = adjustBlockDepthForContentState(\n    content,\n    selection,\n    shiftKey ? -1 : 1\n  );\n\n  // Always, always use this method to modify editorState when in doubt about\n  // how to edit the editor state. It maintains the undo/redo stack for the\n  // stack - https://draftjs.org/docs/api-reference-editor-state#push\n  return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n}\n","import {\n  EditorState,\n  RichUtils,\n  SelectionState,\n  ContentState,\n  BlockMap,\n  ContentBlock,\n} from 'draft-js';\n\nimport pluckGoodies from './pluck_goodies';\n\nimport {\n  getBlocksWithItsDescendants,\n  hasChildren,\n  adjustHasChildren,\n} from './tree_utils';\nimport { moveCurrentBlockUp, moveCurrentBlockDown } from './move';\nimport { collapseBlock, expandBlock } from './collapse_expand_block';\n// import { makeCorrectionsToNodeAndItsDescendants } from './make_corrections_to_node_and_its_descendants';\nimport { ROOT_KEY, MAX_DEPTH } from '../constants';\nimport { onTab } from './tab';\n\nexport const CHANGE = 'CHANGE';\nexport const SET_ROOT_EDITOR_STATE = 'SET_ROOT_EDITOR_STATE';\nexport const SET_EDITOR_STATE = 'SET_EDITOR_STATE';\nexport const SET_STATE = 'SET_STATE';\nexport const INSERT_SOFT_NEWLINE = 'INSERT_SOFT_NEWLINE';\nexport const ZOOM = 'ZOOM';\nexport const COLLAPSE_ITEM = 'COLLAPSE_ITEM';\nexport const EXPAND_ITEM = 'EXPAND_ITEM';\nexport const EXPAND_ALL = 'EXPAND_ALL';\nexport const COLLAPSE_ALL = 'COLLAPSE_ALL';\nexport const MOVE_UP = 'MOVE_UP';\nexport const MOVE_DOWN = 'MOVE_DOWN';\nexport const TOGGLE_COMPLETION = 'TOGGLE_COMPLETION';\nexport const DELETE_CURRENT_ITEM = 'DELETE_CURRENT_ITEM ';\nexport const INDENT = 'INDENT';\nexport const DEDENT = 'DEDENT';\nexport const BOOKMARK = 'BOOKMARK';\n\nexport interface DeepnotesEditorState {\n  // This is for future, when editorState will only have blocks which are under the zoomed in item node. The rootEditorState will always have all the blocks.\n  rootEditorState: EditorState;\n  editorState: EditorState;\n  zoomedInItemId: string;\n}\n\ninterface ChangeAction {\n  type: typeof CHANGE;\n  editorState: EditorState;\n}\n\ninterface InsertSoftNewlineAction {\n  type: typeof INSERT_SOFT_NEWLINE;\n}\n\ninterface SetRootEditorStateAction {\n  type: typeof SET_ROOT_EDITOR_STATE;\n  editorState: EditorState;\n}\n\ninterface SetEditorStateAction {\n  type: typeof SET_EDITOR_STATE;\n  editorState: EditorState;\n}\n\ninterface SetStateAction {\n  type: typeof SET_STATE;\n  prop: string;\n  val: any;\n}\n\ninterface MoveUpAction {\n  type: typeof MOVE_UP;\n}\n\ninterface MoveDownAction {\n  type: typeof MOVE_DOWN;\n}\n\ninterface CollapseItemAction {\n  type: typeof COLLAPSE_ITEM;\n  blockKey: string;\n}\n\ninterface ExpandItemAction {\n  type: typeof EXPAND_ITEM;\n  blockKey: string;\n}\n\ninterface ExpandAllAction {\n  type: typeof EXPAND_ALL;\n}\n\ninterface CollapseAllAction {\n  type: typeof COLLAPSE_ALL;\n}\n\ninterface ZoomAction {\n  type: typeof ZOOM;\n  blockKey: string;\n}\ninterface ToggleCompletionAction {\n  type: typeof TOGGLE_COMPLETION;\n}\n\ninterface DeleteCurrentItemAction {\n  type: typeof DELETE_CURRENT_ITEM;\n}\n\ninterface IndentItemAction {\n  type: typeof INDENT;\n}\n\ninterface DedentItemAction {\n  type: typeof DEDENT;\n}\n\ninterface BookmarkAction {\n  type: typeof BOOKMARK;\n}\n\nexport type EditorActions =\n  | BookmarkAction\n  | IndentItemAction\n  | DedentItemAction\n  | ExpandAllAction\n  | CollapseAllAction\n  | DeleteCurrentItemAction\n  | ToggleCompletionAction\n  | ZoomAction\n  | SetStateAction\n  | ChangeAction\n  | InsertSoftNewlineAction\n  | SetRootEditorStateAction\n  | SetEditorStateAction\n  | MoveUpAction\n  | MoveDownAction\n  | CollapseItemAction\n  | ExpandItemAction;\n\nfunction updateSelectionForZoom(\n  editorState: EditorState,\n  zoomedInItemId: string\n) {\n  const { selectionState, blockMap } = pluckGoodies(editorState);\n  let newSelectionState = selectionState;\n\n  const blockWithItsChildren = getBlocksWithItsDescendants(\n    blockMap,\n    zoomedInItemId\n  );\n  // if the zoomed in item has children, let's focus the first child\n  if (blockWithItsChildren.count() > 1) {\n    // check if one of the children has focus\n    const childWithFocus = blockWithItsChildren.find(\n      block => !!(block && block.getKey() === selectionState.getAnchorKey())\n    );\n\n    // if one of the children has focus, just maintain that focus\n    // else, focus the first child\n    if (!childWithFocus) {\n      const firstChild = blockWithItsChildren.rest().first();\n      newSelectionState = SelectionState.createEmpty(firstChild.getKey());\n    }\n  } else {\n    // if the zoomed in item also has the focus, we should retain it's cursor\n    // position. Else create new focus on the zoomedin item with cursor at\n    // start of line.\n    if (selectionState.getAnchorKey() !== zoomedInItemId) {\n      newSelectionState = SelectionState.createEmpty(zoomedInItemId);\n    }\n  }\n\n  return EditorState.forceSelection(editorState, newSelectionState);\n}\n\n// This function create a new editorState with blocks only in the sub tree rooted at the zoomedInItemId\n// function withBlocksForZoomedInItem(\n// editorState: EditorState,\n// zoomedInItemId: string,\n// ) {\n// const { blockMap } = pluckGoodies(editorState);\n\n// const blocks = makeCorrectionsToNodeAndItsDescendants(\n// blockMap,\n// blockMap.get(zoomedInItemId),\n// );\n\n// return EditorState.createWithContent(\n// ContentState.createFromBlockArray(blocks),\n// );\n// }\n\nfunction zoomReducer(state: DeepnotesEditorState, itemId: string) {\n  const { editorState, zoomedInItemId } = state;\n  const { blockMap } = pluckGoodies(editorState);\n\n  // if there no zoomed in item, that means there's nothing to zoom out into\n  // If the zoomed in fellow is same is item to zoom into, the zoom reducer\n  // is probably called because the search text changed\n  // can't be because now we removed searchText from query string\n  if (zoomedInItemId === itemId) {\n    console.log('We are at the root. Nothing to zoom out into.');\n    return state;\n  }\n\n  let zoomedBlock;\n\n  // if we are provided itemId to zoom out to\n  if (itemId) {\n    zoomedBlock = blockMap.get(itemId);\n  }\n\n  const newZoomedInItemId = zoomedBlock ? zoomedBlock.getKey() : ROOT_KEY;\n\n  // if the zoom is done to the root level, there will be no particular block\n  // to zoom into. And zoomedBlock would be empty in that case. And we\n  // don't need to maintain a separate wholeEditorState\n  return {\n    ...state,\n    // we forceupdate the editor state to itself so that the editor refreshes\n    // If we don't do that, we set the new zoomedInItemId but the editor does\n    // not render again with that information\n    // TODO: Instead of forceupdate, we can update the selection on editorState\n    // We anyways should do it on zoomins. Updating selection, even if it leads\n    // to same selection state, would automatically get draftjs to rerender.\n    editorState: updateSelectionForZoom(state.editorState, newZoomedInItemId),\n    zoomedInItemId: newZoomedInItemId,\n  };\n}\n\nfunction toggleCompleteReducer(state: DeepnotesEditorState) {\n  const { blockMap, anchorBlock, contentState, selectionState } = pluckGoodies(\n    state.editorState\n  );\n\n  // Don't do anything if the item is empty\n  if (anchorBlock.getText().trim() === '') {\n    return state;\n  }\n\n  const blocksWithItsDescendants = getBlocksWithItsDescendants(\n    blockMap,\n    anchorBlock.getKey()\n  );\n\n  const newBlockMap = blockMap.merge(\n    blocksWithItsDescendants.map(b =>\n      b\n        ? b.setIn(\n            ['data', 'completed'],\n            !anchorBlock.getIn(['data', 'completed'])\n          )\n        : b\n    ) as BlockMap\n  );\n\n  const newContentState = contentState.merge({\n    blockMap: newBlockMap,\n    selectionBefore: selectionState,\n    selectionAfter: selectionState,\n  }) as ContentState;\n\n  return {\n    ...state,\n    editorState: EditorState.push(\n      state.editorState,\n      newContentState,\n      'toggle-completion' as any\n    ),\n  };\n}\n\nfunction deleteItemWithChildren(state: DeepnotesEditorState) {\n  const { editorState } = state;\n  const { contentState, blockMap, focusKey, focusBlock } = pluckGoodies(\n    editorState\n  );\n\n  if (!focusKey) {\n    return state;\n  }\n\n  const blocksToDelete = getBlocksWithItsDescendants(blockMap, focusKey);\n  const parentId = blockMap.get(focusKey).getIn(['data', 'parentId']);\n\n  let newBlockMap = blockMap\n    .toSeq()\n    .filter((_: any, k?: string) => !!(k && !blocksToDelete.has(k)))\n    .toOrderedMap();\n\n  // don't allow deleting if there is only one item in the list\n  if (\n    !newBlockMap ||\n    newBlockMap.count() === 0 ||\n    // at root level, the block map will still have one item, the root item\n    (newBlockMap.count() === 1 && newBlockMap.has(ROOT_KEY))\n  ) {\n    return state;\n  }\n\n  const pSibling = contentState.getBlockBefore(focusBlock.getKey());\n\n  let newSelection;\n\n  if (pSibling) {\n    newSelection = new SelectionState({\n      anchorKey: pSibling.getKey(),\n      anchorOffset: pSibling.getText().length - 1,\n      focusKey: pSibling.getKey(),\n      focusOffset: pSibling.getText().length - 1,\n    });\n  } else {\n    // what if it's the only item in the list?\n    newSelection = SelectionState.createEmpty(\n      newBlockMap\n        .toSeq()\n        .first()\n        .getKey()\n    );\n  }\n\n  // reset the hasChildren state of the parent block\n  newBlockMap = adjustHasChildren(newBlockMap, parentId);\n\n  return {\n    ...state,\n    editorState: EditorState.push(\n      editorState,\n      contentState.merge({\n        blockMap: newBlockMap,\n        selectionBefore: newSelection,\n        selectionAfter: newSelection,\n      }) as ContentState,\n      'delete-item' as any\n    ),\n  };\n}\n\nfunction expandCollapseAll(state: DeepnotesEditorState, collapse: boolean) {\n  const { editorState, zoomedInItemId } = state;\n  const { blockMap, contentState } = pluckGoodies(editorState);\n\n  let blocksWithItsDescendants = getBlocksWithItsDescendants(\n    blockMap,\n    zoomedInItemId\n  );\n\n  blocksWithItsDescendants = blocksWithItsDescendants.rest().map(b => {\n    if (!b) {\n      return b;\n    } else {\n      if (hasChildren(blockMap, b.getKey())) {\n        return b.setIn(['data', 'collapsed'], collapse);\n      } else {\n        return b;\n      }\n    }\n  }) as BlockMap;\n  const newBlockMap = blockMap.merge(blocksWithItsDescendants);\n\n  const newEditorState = EditorState.push(\n    editorState,\n    contentState.set('blockMap', newBlockMap) as ContentState,\n    'collapse-all' as any\n  );\n\n  return {\n    ...state,\n    editorState: newEditorState,\n  };\n}\n\nfunction toggleBookmark(editorState: EditorState, zoomedInItemId: string) {\n  const { blockMap, contentState } = pluckGoodies(editorState);\n\n  const zoomedInBlock = blockMap.get(zoomedInItemId);\n\n  const newBlockMap = blockMap.set(\n    zoomedInItemId,\n    zoomedInBlock.setIn(\n      ['data', 'bookmarked'],\n      !zoomedInBlock.getIn(['data', 'bookmarked'])\n    ) as ContentBlock\n  ) as BlockMap;\n\n  return EditorState.push(\n    editorState,\n    contentState.set('blockMap', newBlockMap) as ContentState,\n    'bookmark' as any\n  );\n}\n\nexport function rootReducer(\n  state: DeepnotesEditorState,\n  action: EditorActions\n) {\n  switch (action.type) {\n    case CHANGE:\n      return {\n        ...state,\n        editorState: action.editorState,\n      };\n    case INSERT_SOFT_NEWLINE:\n      return {\n        ...state,\n        editorState: RichUtils.insertSoftNewline(state.editorState),\n      };\n    case SET_ROOT_EDITOR_STATE:\n      return {\n        ...state,\n        rootEditorState: action.editorState,\n      };\n    case SET_EDITOR_STATE:\n      return {\n        ...state,\n        editorState: action.editorState,\n      };\n    case SET_STATE:\n      return {\n        ...state,\n        [action.prop]: action.val,\n      };\n    case MOVE_UP:\n      return {\n        ...state,\n        editorState: moveCurrentBlockUp(\n          state.editorState,\n          state.zoomedInItemId\n        ),\n      };\n    case MOVE_DOWN:\n      return {\n        ...state,\n        editorState: moveCurrentBlockDown(\n          state.editorState,\n          state.zoomedInItemId\n        ),\n      };\n    case COLLAPSE_ITEM:\n      return {\n        ...state,\n        editorState: collapseBlock(state.editorState, action.blockKey),\n      };\n    case EXPAND_ITEM:\n      return {\n        ...state,\n        editorState: expandBlock(state.editorState, action.blockKey),\n      };\n    case EXPAND_ALL:\n      return expandCollapseAll(state, false);\n    case COLLAPSE_ALL:\n      return expandCollapseAll(state, true);\n    case TOGGLE_COMPLETION:\n      return toggleCompleteReducer(state);\n    case DELETE_CURRENT_ITEM:\n      return deleteItemWithChildren(state);\n    case ZOOM:\n      // TODO: we should always pluck out the id of the thing to zoom to\n      // and then send it to this reducer\n      return zoomReducer(state, action.blockKey);\n    case INDENT:\n      return {\n        ...state,\n        editorState: onTab(state.editorState, MAX_DEPTH, state.zoomedInItemId),\n      };\n    case DEDENT:\n      return {\n        ...state,\n        editorState: onTab(\n          state.editorState,\n          MAX_DEPTH,\n          state.zoomedInItemId,\n          true\n        ),\n      };\n    case BOOKMARK:\n      return {\n        ...state,\n        editorState: toggleBookmark(state.editorState, state.zoomedInItemId),\n      };\n    default:\n      return state;\n  }\n}\n","import * as React from 'react';\nimport { EditorState } from 'draft-js';\n\nimport { ROOT_KEY } from '../constants';\n\nexport default function useDocumentTitle(\n  editorState: EditorState,\n  zoomedInItemId: string\n) {\n  const rootDocumentTitle = 'deepnotes - Note taking made easy. And deep.';\n\n  React.useEffect(() => {\n    if (zoomedInItemId === ROOT_KEY) {\n      document.title = rootDocumentTitle;\n    } else {\n      const blockMap = editorState.getCurrentContent().getBlockMap();\n      const zoomedInItemText = blockMap.get(zoomedInItemId).getText();\n\n      document.title = zoomedInItemText;\n    }\n  }, [editorState, zoomedInItemId]);\n}\n","import * as React from 'react';\n\n// Hooks which stores the previous state value so that we can compare the\n// current and previous values. Like we do in componentDidUpdate with\n// prevProps\nexport default function usePrevious<T>(value?: T): T | undefined {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = React.useRef<T | undefined>(undefined);\n\n  // Store current value in ref\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import { BlockMap } from 'draft-js';\n\n/**\n * Find if parent or grandparent or some other ancestor in the tree is collapsed\n */\nexport function hasCollapsedAntecedent(\n  blockMap: BlockMap,\n  blockKey: string,\n  zoomedInItemId?: string\n) {\n  const collapsed = false;\n\n  const block = blockMap.get(blockKey);\n\n  if (!block) {\n    return collapsed;\n  }\n\n  let parentBlock = blockMap.get(block.getIn(['data', 'parentId']));\n\n  while (parentBlock) {\n    if (zoomedInItemId && parentBlock.getKey() === zoomedInItemId) {\n      break;\n    }\n\n    if (parentBlock.getIn(['data', 'collapsed'])) {\n      return true;\n    }\n\n    parentBlock = blockMap.get(parentBlock.getIn(['data', 'parentId']));\n  }\n\n  return collapsed;\n}\n","import {\n  ContentBlock,\n  BlockMap,\n  EditorState,\n  ContentState,\n  SelectionState,\n} from 'draft-js';\n\nimport { ROOT_KEY } from '../constants';\n\nimport pluckGoodies from './pluck_goodies';\nimport { getPosNum } from './pos_generators';\nimport { getEmptySlateState } from './block_creators';\nimport { createDecorators } from './decorators';\nimport { hasChildren } from './tree_utils';\n\nfunction blocksWithSanitizedPosAndDepthAndHasChildren(\n  blockMap: BlockMap,\n  node: ContentBlock\n): Array<ContentBlock> {\n  const nodeKey = node.getKey();\n  const nodeDepth = node.getDepth();\n\n  const children = blockMap\n    .filter(b => !!(b && b.getIn(['data', 'parentId']) === nodeKey))\n    .toArray()\n    .map((block, index) => {\n      return block\n        .setIn(['data', 'pos'], getPosNum(index + 1))\n        .setIn(['data', 'hasChildren'], hasChildren(blockMap, block.getKey()))\n        .set('depth', nodeDepth + 1);\n    }) as Array<ContentBlock>;\n\n  if (!children) {\n    return [node];\n  }\n\n  return [node].concat(\n    children\n      .map((child: ContentBlock) =>\n        blocksWithSanitizedPosAndDepthAndHasChildren(blockMap, child)\n      )\n      .flat()\n  );\n}\n\n/**\n * We have wrong pos information stored in the blocks some times. Don't know the root cause.\n * It causes many operations to behave in the wrong way. E.g. Dedent a child of an item with wrong pos causes the child item to move in an unpredictable manner.\n * move-up and move-down also start working weirdly.\n * So we sanitize or correct the pos information before we render anything.\n * The next time this data is saved, it's alright.\n * @param editorState\n */\nexport function sanitizePosAndDepthInfo(\n  editorState: EditorState,\n  rootKey: string\n) {\n  const { blockMap } = pluckGoodies(editorState);\n\n  if (!blockMap || blockMap.count() < 1) {\n    return getEmptySlateState(ROOT_KEY);\n  }\n\n  const blocks = blocksWithSanitizedPosAndDepthAndHasChildren(\n    blockMap,\n    blockMap.get(rootKey)\n  );\n\n  const newEditorState = EditorState.createWithContent(\n    ContentState.createFromBlockArray(blocks),\n    createDecorators()\n  );\n  let selection;\n  if (blocks.length > 1) {\n    selection = SelectionState.createEmpty(blocks[1].getKey());\n  } else if (blocks.length > 0) {\n    selection = SelectionState.createEmpty(blocks[0].getKey());\n  } else {\n    return newEditorState;\n  }\n\n  return EditorState.forceSelection(newEditorState, selection);\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport {\n  DraftHandleValue,\n  ContentBlock,\n  Editor,\n  EditorState,\n  DraftEditorCommand,\n  RichUtils,\n  Modifier,\n  KeyBindingUtil,\n  getDefaultKeyBinding,\n} from 'draft-js';\n\nimport { EditorContext } from './EditorDispatchContext';\n\nimport debounce from '../../debounce';\nimport Menu from './Menu';\n// import { logToScreen } from './screen_logger';\nimport { createDecorators } from '../decorators';\nimport pluckGoodies from '../pluck_goodies';\nimport { getEmptySlateState } from '../block_creators';\nimport { addEmptyBlockToEnd } from '../add_empty_block_to_end';\nimport { getBlocksWithItsDescendants } from '../tree_utils';\nimport { splitBlock } from '../split_block';\nimport { findParent } from '../find_parent';\nimport { Item } from './Item';\nimport { pasteText } from '../paste_text';\nimport { ROOT_KEY, SEARCH_DEBOUNCE } from '../../constants';\nimport {\n  DeepnotesEditorState,\n  EditorActions,\n  rootReducer,\n  EXPAND_ALL,\n  COLLAPSE_ALL,\n} from '../state_manager';\nimport {\n  SET_ROOT_EDITOR_STATE,\n  SET_EDITOR_STATE,\n  INSERT_SOFT_NEWLINE,\n  ZOOM,\n  COLLAPSE_ITEM,\n  EXPAND_ITEM,\n  MOVE_UP,\n  MOVE_DOWN,\n  TOGGLE_COMPLETION,\n  DELETE_CURRENT_ITEM,\n  CHANGE,\n  INDENT,\n  DEDENT,\n  BOOKMARK,\n} from '../state_manager';\nimport useDocumentTitle from '../../hooks/document-title';\nimport usePrevious from '../../hooks/previous';\n\nimport { hasCollapsedAntecedent } from '../has_collapsed_antecedent';\nimport { sanitizePosAndDepthInfo } from '../sanitize_pos_and_depth_info';\n\nimport PlusSign from '../../icons/PlusSign';\n\nimport 'draft-js/dist/Draft.css';\nimport './editor_styles.global.css';\nimport buttonStyles from '../../button_styles.module.css';\nimport styles from './editor_styles.module.css';\n\ndeclare global {\n  interface Window {\n    state: DeepnotesEditorState;\n    scratch: any;\n  }\n}\n\nfunction notADescendantOfZoomedInItem(\n  editorState: EditorState,\n  block: ContentBlock,\n  zoomedInItemId: string\n) {\n  const { blockMap } = pluckGoodies(editorState);\n\n  const blockWithItsDescendants = getBlocksWithItsDescendants(\n    blockMap,\n    zoomedInItemId\n  );\n\n  return !blockWithItsDescendants.find(\n    (b?: ContentBlock) => !!(b && b.getKey() === block.getKey())\n  );\n}\n\n// This is the key to a faster blockShouldBeHidden function\n// TODO: Right now we are busting this cache on every render. We should find a way\n// to only bust it if required. That is, only bust it if there's an operation which might\n// spoil the data related to visibility.\nlet shouldBeHiddenCache: { [key: string]: boolean } = {};\nfunction blockShouldBeHidden(\n  editorState: EditorState,\n  block: ContentBlock,\n  zoomedInItemId: string,\n  searchText?: string\n) {\n  const { blockMap } = pluckGoodies(editorState);\n  const parentId = block.getIn(['data', 'parentId']);\n\n  if (shouldBeHiddenCache[parentId] !== undefined) {\n    // we set the hidden property of a zoomed in items parent also as hidden\n    // But we want to show the zoomed in item itself\n    return shouldBeHiddenCache[parentId] && block.getKey() !== zoomedInItemId;\n  }\n\n  const shouldBeHidden =\n    block.getKey() === ROOT_KEY ||\n    // When zoomed in, anything below the zoomed in item level can be hidden\n    block.getDepth() < blockMap.get(zoomedInItemId).getDepth() ||\n    (block.getKey() !== zoomedInItemId &&\n      // we don't want to hide items inside collapsed parents if there is a\n      // search text\n      !searchText &&\n      hasCollapsedAntecedent(blockMap, block.getKey(), zoomedInItemId)) ||\n    (searchText &&\n      !block\n        .getText()\n        .toLowerCase()\n        .includes(searchText.toLowerCase())) ||\n    notADescendantOfZoomedInItem(editorState, block, zoomedInItemId);\n\n  if (block.getKey() !== ROOT_KEY) {\n    shouldBeHiddenCache[parentId] = shouldBeHidden;\n    if (shouldBeHidden) {\n      shouldBeHiddenCache[block.getKey()] = shouldBeHidden;\n    }\n  }\n\n  return shouldBeHidden;\n}\n\nconst initialState = {\n  loading: true,\n  zoomedInItemId: ROOT_KEY,\n  rootEditorState: getEmptySlateState(ROOT_KEY),\n  editorState: getEmptySlateState(ROOT_KEY),\n};\n\ninterface Props {\n  initialEditorState?: EditorState;\n  initialZoomedInItemId: string;\n  searchText?: string;\n  onChange?: (editorState: EditorState) => void;\n  onRootChange?: (zoomedInItemId: string) => void;\n  editorWrapperStyle?: React.CSSProperties;\n  onBookmarkClick?: () => void;\n  withToolbar?: boolean;\n}\n\n// TODO: let's try to also retain the selection state here\n// Don't know if editor.getCurrentContent() has the selection state too. Should\n// have\nfunction forceUpdateEditorState(editorState: EditorState, searchText = '') {\n  // TODO - the below code ensures that our redo/undo stack is also maintained.\n  // But do we care about it when we zoom into an item?\n  const newEditorStateInstance = EditorState.createWithContent(\n    editorState.getCurrentContent(),\n    createDecorators(searchText)\n  );\n\n  return EditorState.set(newEditorStateInstance, {\n    selection: editorState.getSelection(),\n    undoStack: editorState.getUndoStack(),\n    redoStack: editorState.getRedoStack(),\n    lastChangeType: editorState.getLastChangeType(),\n  });\n}\n\n// Default maximum block depth supported by Draft.js CSS.\nexport const DRAFT_DEFAULT_MAX_DEPTH = 4;\n\n// Default depth class prefix from Draft.js CSS.\nexport const CUSTOM_DEPTH_CLASS = 'public-DraftStyleDefault-depth-deepnotes-';\n\nexport const generateListNestingStyles = (\n  selectorPrefix: string,\n  maxDepth: number\n) => {\n  let styles = `\n.public-DraftStyleDefault-unorderedListItem:empty {\n  display: none\n}\n`;\n\n  for (let depth = 0; depth <= maxDepth; depth++) {\n    const prefix = `${selectorPrefix}${depth}`;\n\n    styles += `\n.${prefix}.public-DraftStyleDefault-listLTR { \nlist-style: none;\npadding: 0;\nmargin: 0;\n}\n`;\n  }\n\n  return styles;\n};\n\n/**\n * Dynamically generates the right list nesting styles.\n * Can be wrapped as a pure component - to re-render only when `max` changes (eg. never).\n */\nexport const ListNestingStyles = React.memo((props: { max: number }) => {\n  const { max } = props;\n\n  return max > DRAFT_DEFAULT_MAX_DEPTH ? (\n    <style>{generateListNestingStyles(`${CUSTOM_DEPTH_CLASS}`, max)}</style>\n  ) : null;\n});\n\nListNestingStyles.displayName = 'ListNestingStyles';\n\n/**\n * Add depth classes that Draft.js doesn't provide.\n * See https://github.com/facebook/draft-js/blob/232791a4e92d94a52c869f853f9869367bdabdac/src/component/contents/DraftEditorContents-core.react.js#L58-L62.\n * @param {ContentBlock} block\n */\nexport const blockDepthStyleFn = (block: ContentBlock) => {\n  const type = block.getType();\n\n  if (type === 'unordered-list-item') {\n    const depth = block.getDepth();\n    const baseItemStyles = 'list-none m-0';\n    return `${baseItemStyles} ${CUSTOM_DEPTH_CLASS}${String(depth)}`;\n  }\n\n  return '';\n};\n\n// for caching the object containing dispatch related functions\n// otherwise the components accessing values from context rerender\n// on every render\nlet editorDispatchContextValue = {};\n\nfunction DeepnotesEditor(props: Props) {\n  // const [showBoardView, setShowBoardView] = React.useState(false);\n  const searchInputRef = React.useRef<HTMLInputElement>(null);\n  const editor = React.useRef<any>(null);\n  // using useReducer instead of multiple useState calls because this\n  // is the top component and will probably have the global state with it.\n  // useReducer will allow us to have logic to modify various parts of global\n  // state in one place\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<DeepnotesEditorState, EditorActions>\n  >(\n    rootReducer,\n    // The second argument to useReducer can also be thought as the default\n    // value of the state. From reducer perspective, it means the initial\n    // value.\n    initialState\n  );\n\n  const {\n    searchText,\n    initialEditorState,\n    initialZoomedInItemId = ROOT_KEY,\n    onChange,\n    onRootChange,\n    editorWrapperStyle,\n    onBookmarkClick,\n    withToolbar = true,\n  } = props;\n  const { editorState, zoomedInItemId } = state;\n\n  window.state = state;\n\n  useDocumentTitle(editorState, zoomedInItemId);\n\n  function setRootEditorState(editorState: EditorState) {\n    dispatch({ type: SET_ROOT_EDITOR_STATE, editorState });\n  }\n\n  const setEditorState = React.useCallback(\n    (editorState: EditorState) => {\n      dispatch({ type: SET_EDITOR_STATE, editorState });\n    },\n    [dispatch]\n  );\n\n  const expandParticularBlock = React.useCallback(\n    (blockKey: string) => {\n      dispatch({ type: EXPAND_ITEM, blockKey });\n    },\n    [dispatch]\n  );\n\n  const collapseParticularBlock = React.useCallback(\n    (blockKey: string) => {\n      dispatch({ type: COLLAPSE_ITEM, blockKey });\n    },\n    [dispatch]\n  );\n\n  const zoomTo = React.useCallback(\n    (blockKey: string) => {\n      dispatch({ type: ZOOM, blockKey });\n\n      if (typeof onRootChange === 'function') {\n        onRootChange(blockKey);\n      }\n    },\n    [dispatch, onRootChange]\n  );\n\n  // load initial editorState from the owner props\n  // React.useEffect(() => {\n  // if (initialEditorState) {\n  // const sanitizedInitialEditorState = sanitizePosAndDepthInfo(\n  // initialEditorState,\n  // ROOT_KEY\n  // );\n  // setRootEditorState(sanitizedInitialEditorState);\n  // setEditorState(sanitizedInitialEditorState);\n  // }\n  // }, [initialEditorState, setEditorState]);\n\n  // load initial editorState from the owner props\n  React.useEffect(() => {\n    if (zoomedInItemId !== initialZoomedInItemId) {\n      zoomTo(initialZoomedInItemId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoomTo, initialZoomedInItemId]);\n\n  const updateEditorState = React.useCallback(\n    debounce((es: EditorState, searchText: string) => {\n      setEditorState(forceUpdateEditorState(es, searchText));\n    }, SEARCH_DEBOUNCE),\n    [setEditorState]\n  );\n\n  const previousSearchText = usePrevious(searchText);\n  React.useEffect(() => {\n    if (previousSearchText !== undefined && searchText !== previousSearchText) {\n      updateEditorState(editorState, searchText);\n    }\n\n    // i don't want to run it if previousSearchText changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText]);\n\n  React.useEffect(() => {\n    if (typeof onChange === 'function') {\n      onChange(editorState);\n    }\n    // Nope. Just nope.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editorState]);\n\n  // better to store in state rather than calculating in every render\n  const baseDepth = editorState\n    .getCurrentContent()\n    .getBlockMap()\n    .get(zoomedInItemId)\n    .getDepth();\n\n  shouldBeHiddenCache = {};\n\n  function blockRendererFn(contentBlock: ContentBlock) {\n    const type = contentBlock.getType();\n\n    if (type === 'unordered-list-item') {\n      return {\n        component: Item,\n        editable: true,\n        // TODO: It would be better if we can remove the blockProps altogether\n        props: {\n          // TODO: Until we keep sending editorState to each Item, we can never memoize Item. editorState changes on every render.\n          // If we can pass attach `hidden` information on each block when we create them, we won't have to send this at all\n          zoomedInItemId: zoomedInItemId,\n          baseDepth,\n          searchText,\n          hidden: blockShouldBeHidden(\n            editorState,\n            contentBlock,\n            zoomedInItemId,\n            searchText\n          ),\n          onExpandClick: expandParticularBlock,\n          onCollapseClick: collapseParticularBlock,\n        },\n      };\n    }\n\n    return undefined;\n  }\n\n  function focusEditor() {\n    // We don't want to refocus if it's already in focus\n    if (\n      editor &&\n      editor.current &&\n      editor.current.editor !== document.activeElement\n    ) {\n      // when we are at root level, calling editor.current.focus() does not\n      // work. Because the selection on editorState is set to the first block\n      // by default\n      // because we have 2 blocks when we initialize the editor. One root\n      // block and another empty child block for the root. We do so in order\n      // to have a consistent representation of a tree at all zoom levels.\n      // But it breaks draft-js focus. So we have to manually focus the item\n      // by using DOM selection and rane magic.\n      // TODO: We can also try forcing selection to the 2nd block and setting the editorState in our state\n      // Update: Which is what we did. Had to do it in multiple places\n      // probably better to put a check in one place which says that if\n      // the selection is on the root block, move it to the first block\n      editor.current.focus();\n    } else {\n      console.log('Editor already in focus');\n    }\n  }\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      focusEditor();\n    }, 100);\n\n    window.addEventListener('keydown', e => {\n      if (e && e.which === 27) {\n        // esc key\n        if (searchInputRef && searchInputRef.current) {\n          searchInputRef.current.focus();\n        }\n      }\n\n      if (\n        e.metaKey &&\n        e.which === 191 &&\n        editor.current &&\n        editor.current.editor !== document.activeElement\n      ) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n\n    if (initialEditorState) {\n      const sanitizedInitialEditorState = sanitizePosAndDepthInfo(\n        initialEditorState,\n        ROOT_KEY\n      );\n      setRootEditorState(sanitizedInitialEditorState);\n      setEditorState(sanitizedInitialEditorState);\n    }\n\n    // cleanup\n    return () => {\n      // TODO\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  type SyntheticKeyboardEvent = React.KeyboardEvent<{}> | any;\n\n  // step 2. How do we have nested lists? When the user hits the tab key, we\n  // want the current list item to become a sub item to the outer one\n  // We can do that by using the onTab prop of the Editor\n  // And then creating new state using RichUtils.onTab helper function\n  // That function takes the current state, and increases the depth of the\n  // 'unordered-list-item' by 1\n  const handleTab = React.useCallback(\n    (event: SyntheticKeyboardEvent) => {\n      event.preventDefault();\n      if (event.shiftKey) {\n        dispatch({ type: DEDENT });\n      } else {\n        dispatch({ type: INDENT });\n      }\n    },\n    [dispatch]\n  );\n\n  const handleReturn = React.useCallback(\n    (event: SyntheticKeyboardEvent): DraftHandleValue => {\n      // alt+enter for marking item as complete. Works across platforms.\n      if (event.altKey) {\n        dispatch({ type: INSERT_SOFT_NEWLINE });\n        return 'handled';\n      }\n\n      return 'not-handled';\n    },\n    [dispatch]\n  );\n\n  function keyBindingFn(e: any): any {\n    if (\n      KeyBindingUtil.hasCommandModifier(e) ||\n      KeyBindingUtil.isCtrlKeyCommand(e)\n    ) {\n      switch (e.keyCode) {\n        case 191: // command+/\n          // we are handling this shortcut in Editor even though we don't control showing/hiding of keyboard shortcut panel in the editor\n          // draft-js has a default action of select-all for this shortcut\n          return 'toggle-keyboard-shortcut-panel';\n        case 38: // up arrow. Let's collapse the list\n          // cmd+shift+up moves the list item up\n          if (e.shiftKey) {\n            return 'move-up';\n          } else {\n            return 'collapse-list';\n          }\n        case 40: // down arrow\n          // cmd+shift+down moves the list item down\n          if (e.shiftKey) {\n            return 'move-down';\n          } else {\n            return 'expand-list';\n          }\n        case 190: // for Command+.\n          return 'zoom-in';\n        case 188: // for Command+,\n          return 'zoom-out';\n        case 13: // Command+enter\n          return 'toggle-completion';\n        case 222: // Command+'\n          return 'go-to-home';\n        case 8: // cmd+shift+backspace\n          if (e.shiftKey) {\n            return 'delete-item';\n          } else {\n            return getDefaultKeyBinding(e);\n          }\n        default:\n          return getDefaultKeyBinding(e);\n      }\n    } else {\n      if (e.keyCode === 9) {\n        return handleTab(e);\n      }\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  function zoomIn() {\n    const { anchorKey } = pluckGoodies(editorState);\n    zoomTo(anchorKey);\n  }\n\n  function zoomOut() {\n    // find the parent of the current zoomed in item, or nothing/root, if the\n    // item zoomed in is a first level list item, and then set correct url\n    const { editorState, zoomedInItemId } = state;\n\n    // if there is no zoomed item, that means there's nothing to zoom out into\n    // we are at the root\n    if (!zoomedInItemId) {\n      console.log('nothing is zoomed in so nothing to zoom out.');\n      return;\n    }\n\n    const parentBlockOfZoomedInBlock = findParent(editorState, zoomedInItemId);\n\n    if (parentBlockOfZoomedInBlock) {\n      zoomTo(parentBlockOfZoomedInBlock.getKey());\n    }\n  }\n\n  function collapse() {\n    const { anchorKey } = pluckGoodies(state.editorState);\n\n    if (anchorKey) {\n      dispatch({ type: COLLAPSE_ITEM, blockKey: anchorKey });\n    }\n  }\n\n  function expand() {\n    const { anchorKey } = pluckGoodies(state.editorState);\n\n    if (anchorKey) {\n      dispatch({ type: EXPAND_ITEM, blockKey: anchorKey });\n    }\n  }\n\n  const moveUp = React.useCallback(() => {\n    dispatch({ type: MOVE_UP });\n  }, [dispatch]);\n\n  const moveDown = React.useCallback(() => {\n    dispatch({ type: MOVE_DOWN });\n  }, [dispatch]);\n\n  const toggleCompletion = React.useCallback(() => {\n    dispatch({ type: TOGGLE_COMPLETION });\n  }, [dispatch]);\n\n  const goToHome = React.useCallback(() => {\n    window.location.hash = '';\n  }, []);\n\n  const deleteCurrentItem = React.useCallback(() => {\n    dispatch({ type: DELETE_CURRENT_ITEM });\n  }, [dispatch]);\n\n  type EditorCommand = DraftEditorCommand | string;\n  function handleKeyCommand(command: EditorCommand): DraftHandleValue {\n    switch (command) {\n      case 'move-up':\n        moveUp();\n        return 'handled';\n      case 'move-down':\n        moveDown();\n        return 'handled';\n      case 'collapse-list':\n        collapse();\n        return 'handled';\n      case 'expand-list':\n        expand();\n        return 'handled';\n      // this is called when user presses the Enter or Return key\n      case 'split-block':\n        // TODO: this causes a major bug when the block to split is collapsed\n        // The data inside the collapsed item vanishes\n        // Which means, we need to implement our own split block :()\n        // don't allow any new block creation when in search mode\n        if (!searchText) {\n          setEditorState(splitBlock(editorState, state.zoomedInItemId));\n        }\n        return 'handled';\n      case 'zoom-in':\n        zoomIn();\n        return 'handled';\n      case 'zoom-out':\n        zoomOut();\n        return 'handled';\n      case 'toggle-completion':\n        toggleCompletion();\n        return 'handled';\n      case 'backspace':\n        // eslint-disable-next-line no-case-declarations\n        const { contentState, blockMap, selectionState } = pluckGoodies(\n          state.editorState\n        );\n        // eslint-disable-next-line no-case-declarations\n        const block = blockMap.get(selectionState.getAnchorKey());\n\n        // if cursor is at the start of the list\n        if (block.getText() === '' || selectionState.getAnchorOffset() === 0) {\n          // 1. Don't allow deleting any non-leaf item this way. Causes other\n          // problems. It's consistent with how workflowy does it too.\n          // , don't do anything\n          // 2. also don't do anything when this item is the only item in the\n          // blockMap\n          // 3. also don't delete first item in the list - that item will not have\n          // any previous sibling\n          // 4. first item in zoomed in state - key same as zoomedInItemId\n          const pSibling = contentState.getBlockBefore(block.getKey());\n\n          if (\n            blockMap\n              .get(selectionState.getAnchorKey())\n              .getIn(['data', 'hasChildren']) ||\n            !pSibling ||\n            // accounting for every present ROOT block\n            blockMap.count() === 2 ||\n            block.getKey() === state.zoomedInItemId\n          ) {\n            return 'handled';\n          } else {\n            // else, delete the block\n            // even if this item has children, they will either become the\n            // previous siblings children or siblings\n            return 'not-handled';\n          }\n        } else {\n          return 'not-handled';\n        }\n      case 'go-to-home':\n        goToHome();\n        return 'handled';\n      case 'delete-item':\n        deleteCurrentItem();\n        return 'handled';\n      default:\n        // eslint-disable-next-line no-case-declarations\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n\n        if (newState) {\n          setEditorState(newState);\n          return 'handled';\n        }\n\n        return 'not-handled';\n    }\n  }\n\n  function handleChange(editorState: EditorState) {\n    const { contentState, anchorBlock, selectionState } = pluckGoodies(\n      editorState\n    );\n\n    let newState = editorState;\n\n    // if somehow a change takes users out of list item type, force the block\n    // back to 'unordered-list-item' type\n    if (anchorBlock && anchorBlock.getType() !== 'unordered-list-item') {\n      const newContentState = Modifier.setBlockType(\n        contentState,\n        selectionState,\n        'unordered-list-item'\n      );\n      // TODO: What should be the change type here?\n      newState = EditorState.push(\n        editorState,\n        newContentState,\n        'force-list-type' as any\n      );\n    }\n\n    dispatch({ type: CHANGE, editorState: newState });\n  }\n\n  const handleIndentClick = React.useCallback(() => {\n    dispatch({ type: INDENT });\n  }, [dispatch]);\n\n  const handleOutdentClick = React.useCallback(() => {\n    dispatch({ type: DEDENT });\n  }, [dispatch]);\n\n  // TODO -\n  // Adding search brings in a lot of complexity. What happens when users\n  // searches something and then goes ahead and changes the filtered\n  // list of items\n  //    Ans - we can maintain a focus state for search input and only filter\n  //    blocks when the search input is in focus\n  // What happens if the search term is still there and user zooms out?\n  //    Ans - maybe we can clean the search text on zoom out\n  // When user searches something and then edits an item from the filtered\n  // list, draft-js onChange now sends back the filtered blocks in the\n  // changed editorState, which is what we store in our store. Which means\n  // we lose the unfiltered data once users start editing filtered data.\n  //    Ans - maintain another state variable called unfiltered data?\n  //    Or, instead of filtering the blocks and sending to draft-js editor,\n  //    just send the searchText to Item component and let it show/hide\n  //    that item based on the searchText. Yesssss.\n  // When user creates new item when in search mode. As soon as they type\n  // something in that block, it disappears because it doesn't match the\n  // search string. Can not let that happen by comparing the time stamps\n  // of last search input change and block update timestamp. If the block\n  // was created after the last search input was made, don't apply the\n  // search filter on it.\n\n  function handleAddNewItem() {\n    // add new item to the end of the list\n    // Make sure that it's at the end of the zoomed in list\n    dispatch({\n      type: SET_EDITOR_STATE,\n      editorState: addEmptyBlockToEnd(\n        state.editorState,\n        zoomedInItemId,\n        baseDepth + 1\n      ),\n    });\n  }\n\n  // TODO: if we move this to our reducer, we can then cache using React.useCallback((), [dispatch])\n  // set collapsed to false for every block\n  const handleExpandAllClick = React.useCallback(() => {\n    dispatch({ type: EXPAND_ALL });\n  }, [dispatch]);\n\n  // keep calling collapseBlock for all the blocks\n  // works like a charm\n  const handleCollapseAllClick = React.useCallback(() => {\n    dispatch({ type: COLLAPSE_ALL });\n  }, [dispatch]);\n\n  // For times when user tabs through rest of the elements in our page\n  // The editor itself will also be focusable\n  function handleWrapperFocus() {\n    focusEditor();\n  }\n\n  function handlePastedText(pastedText: string) {\n    setEditorState(pasteText(editorState, pastedText));\n    return 'handled' as DraftHandleValue;\n  }\n\n  // function handleshowboardviewclick() {\n  //   if (zoomedInItemId !== ROOT_KEY) {\n  //     console.log('board view activated');\n  //     setShowBoardView(!showBoardView);\n  //   } else {\n  //     alert('Cannot show board view at root level');\n  //   }\n  // }\n\n  // This is to cache the object we set as value for EditorDispatchContext\n  // If we don't do this, we create a new object on every render\n  // Which then rerenders every component accessing anything from the\n  // EditorDispatchContext\n  React.useEffect(() => {\n    editorDispatchContextValue = {\n      onZoom: zoomTo,\n      onExpandClick: expandParticularBlock,\n      onCollapseClick: collapseParticularBlock,\n    };\n  }, [zoomTo, expandParticularBlock, collapseParticularBlock]);\n\n  const handleBookmarkClick = React.useCallback(() => {\n    dispatch({ type: BOOKMARK });\n\n    if (typeof onBookmarkClick === 'function') {\n      onBookmarkClick();\n    }\n  }, [dispatch, onBookmarkClick]);\n\n  // className=\"flex flex-col w-full p-10 pt-3 pl-6 mb-12 sm:pl-10 sm:shadow-sm rounded-md\"\n  return (\n    <div className=\"editor deepnotes-editor-theme-light\">\n      {withToolbar && (\n        <Menu\n          onExpandAllClick={handleExpandAllClick}\n          onCollapseAllClick={handleCollapseAllClick}\n          onIndentClick={handleIndentClick}\n          onOutdentClick={handleOutdentClick}\n          onToggleCompletionClick={toggleCompletion}\n          isBookmarked={\n            editorState &&\n            !!editorState\n              .getCurrentContent()\n              .getBlockMap()\n              .get(zoomedInItemId)\n              .getIn(['data', 'bookmarked'])\n          }\n          onBookmarkClick={handleBookmarkClick}\n        />\n      )}\n      <div\n        className={styles.container}\n        tabIndex={0}\n        onFocus={handleWrapperFocus}\n        style={{ minHeight: 300, ...editorWrapperStyle }}\n      >\n        <EditorContext.Provider value={editorDispatchContextValue}>\n          <Editor\n            webDriverTestID=\"dumpster-editor\"\n            textAlignment=\"left\"\n            ref={editor}\n            editorState={editorState}\n            onChange={handleChange}\n            blockRendererFn={blockRendererFn}\n            handleReturn={handleReturn}\n            handlePastedText={handlePastedText}\n            stripPastedStyles={true}\n            keyBindingFn={keyBindingFn}\n            handleKeyCommand={handleKeyCommand}\n            onFocus={() => console.log('editor got focus')}\n            placeholder=\"Start writing\"\n            blockStyleFn={blockDepthStyleFn}\n            customStyleMap={{\n              CODE: {\n                color: '#15141f',\n                background: '#eae9ed',\n                fontFamily:\n                  'Monaco,Menlo,Ubuntu Mono,Droid Sans Mono,Consolas,monospace',\n                fontSize: '0.9em',\n                padding: '0 0.25rem',\n                margin: '0 0.0625rem',\n                borderRadius: '0.125rem',\n                overflowWrap: 'break-word',\n                wordWrap: 'break-word',\n              },\n            }}\n          />\n          <ListNestingStyles max={40} />\n        </EditorContext.Provider>\n        <button\n          className={classNames(\n            buttonStyles['button'],\n            buttonStyles['icon-button'],\n            styles['new-item-button']\n          )}\n          onClick={handleAddNewItem}\n          aria-label=\"Add new item\"\n          title=\"Add new item\"\n        >\n          <PlusSign\n            className={styles['new-item-icon']}\n            aria-label=\"Add new item\"\n          />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(DeepnotesEditor);\n"],"names":["EditorContext","React","debounce","fn","delay","setTimeoutHandle","args","clearTimeout","setTimeout","apply","CheckMark","props","fill","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","stroke","d","ArrowRight","ArrowLeft","DotHorizontal","Star","MenuContainer","onExpandAllClick","onCollapseAllClick","onIndentClick","onOutdentClick","onToggleCompletionClick","isBookmarked","onBookmarkClick","className","styles","onMouseDown","e","stopPropagation","preventDefault","nativeEvent","stopImmediatePropagation","classNames","buttonStyles","title","style","marginRight","bookmarked","Menu","MenuButton","MenuList","MenuItem","onSelect","Hashtag","children","handleSearchInputChange","textDecoration","color","cursor","onClick","text","SearchHighlight","background","Link","link","map","child","join","href","window","open","linkifyInstance","linkify","HASHTAG_REGEX","findWithRegex","regex","contentBlock","callback","getText","matchArr","start","exec","index","length","hashtagStrategy","findLinkEntities","links","match","forEach","lastIndex","createDecorators","memoizeOne","searchText","RegExp","escapeStringRegexp","CompositeDecorator","strategy","component","pluckGoodies","editorState","contentState","getCurrentContent","selectionState","getSelection","blockMap","getBlockMap","anchorKey","getAnchorKey","anchorBlock","getBlockForKey","focusKey","getFocusKey","focusBlock","ROOT_KEY","BASE_POS","MAX_DEPTH","SEARCH_DEBOUNCE","getPosNum","pos","getPosInBetween","posStart","posEnd","Math","round","getPosAfter","lastPos","getNewContentBlock","config","ContentBlock","key","genKey","type","depth","getEmptyBlock","getRootBlock","rootId","getEmptySlateState","firstItem","set","Immutable","Map","parentId","rootBlock","firstBlocks","emptySlate","EditorState","createWithContent","ContentState","createFromBlockArray","forceSelection","SelectionState","createEmpty","getKey","calculateDepth","blockKey","zoomedInItemId","block","get","parentBlock","getIn","hasChildren","find","b","adjustHasChildren","setIn","getFirstChild","getChildren","filter","getNextSibling","getPreviousSibling","reverse","getBlocksWithItsDescendants","toSeq","skipUntil","_","k","takeWhile","insertBlocksAtKey","blocksToInsert","insertionBlockKey","insertBefore","insertionBlock","blocksBeforeInsertionPoint","takeUntil","blocksAfterInsertionPoint","rest","concat","toOrderedMap","insertBlocksAfter","blocks","appendChild","parentBlockKey","blockToAdd","blockWithItsChildren","blockToInsertAfterKey","count","last","OrderedMap","addEmptyBlockToEnd","newBlock","newBlockMap","newSelection","newContentState","merge","selectionBefore","selectionAfter","anchorOffset","focusOffset","push","getStartAndEndKeys","startBlockKey","first","sortByPos","arr","newArr","sort","item1","item2","makeCorrectionsToNodeAndItsDescendants","node","nodeDepth","getDepth","nodeKey","toArray","flat","recreateParentBlockMap","startKey","endKey","startIndex","keySeq","findIndex","endIndex","recreatedContentState","recreatedBlocks","recreatedBlockMap","slice","splitBlock","isCollapsed","blockToSplit","isBlockCollapsed","isBlockToSplitZoomedIn","offset","getAnchorOffset","chars","getCharacterList","getStartOffset","zoomedInBlockChildren","nextSibling","tempPos","isBackward","findParent","skipWhile","DownArrow","xmlns","Disc","collapsed","itemId","isCollapsible","onZoom","onExpandClick","onCollapseClick","marginTop","width","height","contentEditable","cx","cy","r","PlusSign","version","id","xmlnsXlink","x","y","enableBackground","xmlSpace","MinusSign","wrapInNestedDivs","el","areEqual","prevProps","newProps","prevBlock","blockProps","hidden","prevHidden","baseDepth","prevBaseDepth","prevSearchText","nextBlock","nextHidden","nextBaseDepth","nextSearchText","Item","completed","collapsible","itemClasses","marginLeft","EditorBlock","displayName","pasteText","pastedText","Modifier","replaceText","moveBlock","blockToSwapWith","blockToMoveKey","newParentId","newPos","getBlockToInsertBefore","previousSibling","parent","parentsPreviousSibling","getBlockToInsertAfter","parentNextSibling","moveCurrentBlockUp","console","log","getBlockAfter","getFocusOffset","newState","moveCurrentBlockDown","firstChild","toggleCollapseState","collapseState","undefined","collapseBlock","expandBlock","getParentIdAfterAdjustment","indentBlockKey","newDepth","previousBlock","getBlockBefore","getPosAfterAdjustment","adjustedBlockKey","blocksWithSameParent","i","blockBefore","blockAfter","adjustBlockDepthForContentState","adjustment","indentBlock","oldParentId","onTab","maxDepth","shiftKey","selection","getStartKey","content","startBlock","withAdjustment","CHANGE","SET_ROOT_EDITOR_STATE","SET_EDITOR_STATE","SET_STATE","INSERT_SOFT_NEWLINE","ZOOM","COLLAPSE_ITEM","EXPAND_ITEM","EXPAND_ALL","COLLAPSE_ALL","MOVE_UP","MOVE_DOWN","TOGGLE_COMPLETION","DELETE_CURRENT_ITEM","INDENT","DEDENT","BOOKMARK","updateSelectionForZoom","newSelectionState","childWithFocus","zoomReducer","state","zoomedBlock","newZoomedInItemId","toggleCompleteReducer","trim","blocksWithItsDescendants","deleteItemWithChildren","blocksToDelete","has","pSibling","expandCollapseAll","collapse","newEditorState","toggleBookmark","zoomedInBlock","rootReducer","action","RichUtils","insertSoftNewline","rootEditorState","prop","val","useDocumentTitle","rootDocumentTitle","document","zoomedInItemText","usePrevious","value","ref","current","hasCollapsedAntecedent","blocksWithSanitizedPosAndDepthAndHasChildren","sanitizePosAndDepthInfo","rootKey","notADescendantOfZoomedInItem","blockWithItsDescendants","shouldBeHiddenCache","blockShouldBeHidden","shouldBeHidden","toLowerCase","includes","initialState","loading","forceUpdateEditorState","newEditorStateInstance","undoStack","getUndoStack","redoStack","getRedoStack","lastChangeType","getLastChangeType","DRAFT_DEFAULT_MAX_DEPTH","CUSTOM_DEPTH_CLASS","generateListNestingStyles","selectorPrefix","prefix","ListNestingStyles","max","blockDepthStyleFn","getType","baseItemStyles","String","editorDispatchContextValue","DeepnotesEditor","searchInputRef","editor","dispatch","initialEditorState","initialZoomedInItemId","onChange","onRootChange","editorWrapperStyle","withToolbar","setRootEditorState","setEditorState","expandParticularBlock","collapseParticularBlock","zoomTo","updateEditorState","es","previousSearchText","blockRendererFn","editable","focusEditor","activeElement","focus","addEventListener","which","metaKey","sanitizedInitialEditorState","handleTab","event","handleReturn","altKey","keyBindingFn","KeyBindingUtil","hasCommandModifier","isCtrlKeyCommand","keyCode","getDefaultKeyBinding","zoomIn","zoomOut","parentBlockOfZoomedInBlock","expand","moveUp","moveDown","toggleCompletion","goToHome","location","hash","deleteCurrentItem","handleKeyCommand","command","handleChange","setBlockType","handleIndentClick","handleOutdentClick","handleAddNewItem","handleExpandAllClick","handleCollapseAllClick","handleWrapperFocus","handlePastedText","handleBookmarkClick","container","tabIndex","onFocus","minHeight","Provider","Editor","webDriverTestID","textAlignment","stripPastedStyles","placeholder","blockStyleFn","customStyleMap","CODE","fontFamily","fontSize","padding","margin","borderRadius","overflowWrap","wordWrap"],"mappings":"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"}